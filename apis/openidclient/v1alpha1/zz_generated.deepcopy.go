//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationFlowBindingOverridesInitParameters) DeepCopyInto(out *AuthenticationFlowBindingOverridesInitParameters) {
	*out = *in
	if in.BrowserID != nil {
		in, out := &in.BrowserID, &out.BrowserID
		*out = new(string)
		**out = **in
	}
	if in.BrowserIDRef != nil {
		in, out := &in.BrowserIDRef, &out.BrowserIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BrowserIDSelector != nil {
		in, out := &in.BrowserIDSelector, &out.BrowserIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectGrantID != nil {
		in, out := &in.DirectGrantID, &out.DirectGrantID
		*out = new(string)
		**out = **in
	}
	if in.DirectGrantIDRef != nil {
		in, out := &in.DirectGrantIDRef, &out.DirectGrantIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectGrantIDSelector != nil {
		in, out := &in.DirectGrantIDSelector, &out.DirectGrantIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationFlowBindingOverridesInitParameters.
func (in *AuthenticationFlowBindingOverridesInitParameters) DeepCopy() *AuthenticationFlowBindingOverridesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthenticationFlowBindingOverridesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationFlowBindingOverridesObservation) DeepCopyInto(out *AuthenticationFlowBindingOverridesObservation) {
	*out = *in
	if in.BrowserID != nil {
		in, out := &in.BrowserID, &out.BrowserID
		*out = new(string)
		**out = **in
	}
	if in.DirectGrantID != nil {
		in, out := &in.DirectGrantID, &out.DirectGrantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationFlowBindingOverridesObservation.
func (in *AuthenticationFlowBindingOverridesObservation) DeepCopy() *AuthenticationFlowBindingOverridesObservation {
	if in == nil {
		return nil
	}
	out := new(AuthenticationFlowBindingOverridesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationFlowBindingOverridesParameters) DeepCopyInto(out *AuthenticationFlowBindingOverridesParameters) {
	*out = *in
	if in.BrowserID != nil {
		in, out := &in.BrowserID, &out.BrowserID
		*out = new(string)
		**out = **in
	}
	if in.BrowserIDRef != nil {
		in, out := &in.BrowserIDRef, &out.BrowserIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BrowserIDSelector != nil {
		in, out := &in.BrowserIDSelector, &out.BrowserIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectGrantID != nil {
		in, out := &in.DirectGrantID, &out.DirectGrantID
		*out = new(string)
		**out = **in
	}
	if in.DirectGrantIDRef != nil {
		in, out := &in.DirectGrantIDRef, &out.DirectGrantIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectGrantIDSelector != nil {
		in, out := &in.DirectGrantIDSelector, &out.DirectGrantIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationFlowBindingOverridesParameters.
func (in *AuthenticationFlowBindingOverridesParameters) DeepCopy() *AuthenticationFlowBindingOverridesParameters {
	if in == nil {
		return nil
	}
	out := new(AuthenticationFlowBindingOverridesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationInitParameters) DeepCopyInto(out *AuthorizationInitParameters) {
	*out = *in
	if in.AllowRemoteResourceManagement != nil {
		in, out := &in.AllowRemoteResourceManagement, &out.AllowRemoteResourceManagement
		*out = new(bool)
		**out = **in
	}
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.KeepDefaults != nil {
		in, out := &in.KeepDefaults, &out.KeepDefaults
		*out = new(bool)
		**out = **in
	}
	if in.PolicyEnforcementMode != nil {
		in, out := &in.PolicyEnforcementMode, &out.PolicyEnforcementMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationInitParameters.
func (in *AuthorizationInitParameters) DeepCopy() *AuthorizationInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthorizationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationObservation) DeepCopyInto(out *AuthorizationObservation) {
	*out = *in
	if in.AllowRemoteResourceManagement != nil {
		in, out := &in.AllowRemoteResourceManagement, &out.AllowRemoteResourceManagement
		*out = new(bool)
		**out = **in
	}
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.KeepDefaults != nil {
		in, out := &in.KeepDefaults, &out.KeepDefaults
		*out = new(bool)
		**out = **in
	}
	if in.PolicyEnforcementMode != nil {
		in, out := &in.PolicyEnforcementMode, &out.PolicyEnforcementMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationObservation.
func (in *AuthorizationObservation) DeepCopy() *AuthorizationObservation {
	if in == nil {
		return nil
	}
	out := new(AuthorizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationParameters) DeepCopyInto(out *AuthorizationParameters) {
	*out = *in
	if in.AllowRemoteResourceManagement != nil {
		in, out := &in.AllowRemoteResourceManagement, &out.AllowRemoteResourceManagement
		*out = new(bool)
		**out = **in
	}
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.KeepDefaults != nil {
		in, out := &in.KeepDefaults, &out.KeepDefaults
		*out = new(bool)
		**out = **in
	}
	if in.PolicyEnforcementMode != nil {
		in, out := &in.PolicyEnforcementMode, &out.PolicyEnforcementMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationParameters.
func (in *AuthorizationParameters) DeepCopy() *AuthorizationParameters {
	if in == nil {
		return nil
	}
	out := new(AuthorizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Client) DeepCopyInto(out *Client) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Client.
func (in *Client) DeepCopy() *Client {
	if in == nil {
		return nil
	}
	out := new(Client)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Client) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientClientPolicy) DeepCopyInto(out *ClientClientPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientClientPolicy.
func (in *ClientClientPolicy) DeepCopy() *ClientClientPolicy {
	if in == nil {
		return nil
	}
	out := new(ClientClientPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientClientPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientClientPolicyInitParameters) DeepCopyInto(out *ClientClientPolicyInitParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Logic != nil {
		in, out := &in.Logic, &out.Logic
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceServerID != nil {
		in, out := &in.ResourceServerID, &out.ResourceServerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientClientPolicyInitParameters.
func (in *ClientClientPolicyInitParameters) DeepCopy() *ClientClientPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientClientPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientClientPolicyList) DeepCopyInto(out *ClientClientPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClientClientPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientClientPolicyList.
func (in *ClientClientPolicyList) DeepCopy() *ClientClientPolicyList {
	if in == nil {
		return nil
	}
	out := new(ClientClientPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientClientPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientClientPolicyObservation) DeepCopyInto(out *ClientClientPolicyObservation) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Logic != nil {
		in, out := &in.Logic, &out.Logic
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.ResourceServerID != nil {
		in, out := &in.ResourceServerID, &out.ResourceServerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientClientPolicyObservation.
func (in *ClientClientPolicyObservation) DeepCopy() *ClientClientPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ClientClientPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientClientPolicyParameters) DeepCopyInto(out *ClientClientPolicyParameters) {
	*out = *in
	if in.Clients != nil {
		in, out := &in.Clients, &out.Clients
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Logic != nil {
		in, out := &in.Logic, &out.Logic
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceServerID != nil {
		in, out := &in.ResourceServerID, &out.ResourceServerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientClientPolicyParameters.
func (in *ClientClientPolicyParameters) DeepCopy() *ClientClientPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ClientClientPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientClientPolicySpec) DeepCopyInto(out *ClientClientPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientClientPolicySpec.
func (in *ClientClientPolicySpec) DeepCopy() *ClientClientPolicySpec {
	if in == nil {
		return nil
	}
	out := new(ClientClientPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientClientPolicyStatus) DeepCopyInto(out *ClientClientPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientClientPolicyStatus.
func (in *ClientClientPolicyStatus) DeepCopy() *ClientClientPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(ClientClientPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientDefaultScopes) DeepCopyInto(out *ClientDefaultScopes) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientDefaultScopes.
func (in *ClientDefaultScopes) DeepCopy() *ClientDefaultScopes {
	if in == nil {
		return nil
	}
	out := new(ClientDefaultScopes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientDefaultScopes) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientDefaultScopesInitParameters) DeepCopyInto(out *ClientDefaultScopesInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientIDRef != nil {
		in, out := &in.ClientIDRef, &out.ClientIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientIDSelector != nil {
		in, out := &in.ClientIDSelector, &out.ClientIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultScopes != nil {
		in, out := &in.DefaultScopes, &out.DefaultScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientDefaultScopesInitParameters.
func (in *ClientDefaultScopesInitParameters) DeepCopy() *ClientDefaultScopesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientDefaultScopesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientDefaultScopesList) DeepCopyInto(out *ClientDefaultScopesList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClientDefaultScopes, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientDefaultScopesList.
func (in *ClientDefaultScopesList) DeepCopy() *ClientDefaultScopesList {
	if in == nil {
		return nil
	}
	out := new(ClientDefaultScopesList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientDefaultScopesList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientDefaultScopesObservation) DeepCopyInto(out *ClientDefaultScopesObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.DefaultScopes != nil {
		in, out := &in.DefaultScopes, &out.DefaultScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientDefaultScopesObservation.
func (in *ClientDefaultScopesObservation) DeepCopy() *ClientDefaultScopesObservation {
	if in == nil {
		return nil
	}
	out := new(ClientDefaultScopesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientDefaultScopesParameters) DeepCopyInto(out *ClientDefaultScopesParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientIDRef != nil {
		in, out := &in.ClientIDRef, &out.ClientIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientIDSelector != nil {
		in, out := &in.ClientIDSelector, &out.ClientIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultScopes != nil {
		in, out := &in.DefaultScopes, &out.DefaultScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientDefaultScopesParameters.
func (in *ClientDefaultScopesParameters) DeepCopy() *ClientDefaultScopesParameters {
	if in == nil {
		return nil
	}
	out := new(ClientDefaultScopesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientDefaultScopesSpec) DeepCopyInto(out *ClientDefaultScopesSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientDefaultScopesSpec.
func (in *ClientDefaultScopesSpec) DeepCopy() *ClientDefaultScopesSpec {
	if in == nil {
		return nil
	}
	out := new(ClientDefaultScopesSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientDefaultScopesStatus) DeepCopyInto(out *ClientDefaultScopesStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientDefaultScopesStatus.
func (in *ClientDefaultScopesStatus) DeepCopy() *ClientDefaultScopesStatus {
	if in == nil {
		return nil
	}
	out := new(ClientDefaultScopesStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientGroupPolicy) DeepCopyInto(out *ClientGroupPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientGroupPolicy.
func (in *ClientGroupPolicy) DeepCopy() *ClientGroupPolicy {
	if in == nil {
		return nil
	}
	out := new(ClientGroupPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientGroupPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientGroupPolicyInitParameters) DeepCopyInto(out *ClientGroupPolicyInitParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]GroupsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupsClaim != nil {
		in, out := &in.GroupsClaim, &out.GroupsClaim
		*out = new(string)
		**out = **in
	}
	if in.Logic != nil {
		in, out := &in.Logic, &out.Logic
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceServerID != nil {
		in, out := &in.ResourceServerID, &out.ResourceServerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientGroupPolicyInitParameters.
func (in *ClientGroupPolicyInitParameters) DeepCopy() *ClientGroupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientGroupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientGroupPolicyList) DeepCopyInto(out *ClientGroupPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClientGroupPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientGroupPolicyList.
func (in *ClientGroupPolicyList) DeepCopy() *ClientGroupPolicyList {
	if in == nil {
		return nil
	}
	out := new(ClientGroupPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientGroupPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientGroupPolicyObservation) DeepCopyInto(out *ClientGroupPolicyObservation) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]GroupsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupsClaim != nil {
		in, out := &in.GroupsClaim, &out.GroupsClaim
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Logic != nil {
		in, out := &in.Logic, &out.Logic
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.ResourceServerID != nil {
		in, out := &in.ResourceServerID, &out.ResourceServerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientGroupPolicyObservation.
func (in *ClientGroupPolicyObservation) DeepCopy() *ClientGroupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ClientGroupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientGroupPolicyParameters) DeepCopyInto(out *ClientGroupPolicyParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]GroupsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupsClaim != nil {
		in, out := &in.GroupsClaim, &out.GroupsClaim
		*out = new(string)
		**out = **in
	}
	if in.Logic != nil {
		in, out := &in.Logic, &out.Logic
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceServerID != nil {
		in, out := &in.ResourceServerID, &out.ResourceServerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientGroupPolicyParameters.
func (in *ClientGroupPolicyParameters) DeepCopy() *ClientGroupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ClientGroupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientGroupPolicySpec) DeepCopyInto(out *ClientGroupPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientGroupPolicySpec.
func (in *ClientGroupPolicySpec) DeepCopy() *ClientGroupPolicySpec {
	if in == nil {
		return nil
	}
	out := new(ClientGroupPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientGroupPolicyStatus) DeepCopyInto(out *ClientGroupPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientGroupPolicyStatus.
func (in *ClientGroupPolicyStatus) DeepCopy() *ClientGroupPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(ClientGroupPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientInitParameters) DeepCopyInto(out *ClientInitParameters) {
	*out = *in
	if in.AccessTokenLifespan != nil {
		in, out := &in.AccessTokenLifespan, &out.AccessTokenLifespan
		*out = new(string)
		**out = **in
	}
	if in.AccessType != nil {
		in, out := &in.AccessType, &out.AccessType
		*out = new(string)
		**out = **in
	}
	if in.AdminURL != nil {
		in, out := &in.AdminURL, &out.AdminURL
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationFlowBindingOverrides != nil {
		in, out := &in.AuthenticationFlowBindingOverrides, &out.AuthenticationFlowBindingOverrides
		*out = make([]AuthenticationFlowBindingOverridesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = make([]AuthorizationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackchannelLogoutRevokeOfflineSessions != nil {
		in, out := &in.BackchannelLogoutRevokeOfflineSessions, &out.BackchannelLogoutRevokeOfflineSessions
		*out = new(bool)
		**out = **in
	}
	if in.BackchannelLogoutSessionRequired != nil {
		in, out := &in.BackchannelLogoutSessionRequired, &out.BackchannelLogoutSessionRequired
		*out = new(bool)
		**out = **in
	}
	if in.BackchannelLogoutURL != nil {
		in, out := &in.BackchannelLogoutURL, &out.BackchannelLogoutURL
		*out = new(string)
		**out = **in
	}
	if in.BaseURL != nil {
		in, out := &in.BaseURL, &out.BaseURL
		*out = new(string)
		**out = **in
	}
	if in.ClientAuthenticatorType != nil {
		in, out := &in.ClientAuthenticatorType, &out.ClientAuthenticatorType
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientIDRef != nil {
		in, out := &in.ClientIDRef, &out.ClientIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientIDSelector != nil {
		in, out := &in.ClientIDSelector, &out.ClientIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientOfflineSessionIdleTimeout != nil {
		in, out := &in.ClientOfflineSessionIdleTimeout, &out.ClientOfflineSessionIdleTimeout
		*out = new(string)
		**out = **in
	}
	if in.ClientOfflineSessionMaxLifespan != nil {
		in, out := &in.ClientOfflineSessionMaxLifespan, &out.ClientOfflineSessionMaxLifespan
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSessionIdleTimeout != nil {
		in, out := &in.ClientSessionIdleTimeout, &out.ClientSessionIdleTimeout
		*out = new(string)
		**out = **in
	}
	if in.ClientSessionMaxLifespan != nil {
		in, out := &in.ClientSessionMaxLifespan, &out.ClientSessionMaxLifespan
		*out = new(string)
		**out = **in
	}
	if in.ConsentRequired != nil {
		in, out := &in.ConsentRequired, &out.ConsentRequired
		*out = new(bool)
		**out = **in
	}
	if in.ConsentScreenText != nil {
		in, out := &in.ConsentScreenText, &out.ConsentScreenText
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DirectAccessGrantsEnabled != nil {
		in, out := &in.DirectAccessGrantsEnabled, &out.DirectAccessGrantsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DisplayOnConsentScreen != nil {
		in, out := &in.DisplayOnConsentScreen, &out.DisplayOnConsentScreen
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExcludeSessionStateFromAuthResponse != nil {
		in, out := &in.ExcludeSessionStateFromAuthResponse, &out.ExcludeSessionStateFromAuthResponse
		*out = new(bool)
		**out = **in
	}
	if in.ExtraConfig != nil {
		in, out := &in.ExtraConfig, &out.ExtraConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FrontchannelLogoutEnabled != nil {
		in, out := &in.FrontchannelLogoutEnabled, &out.FrontchannelLogoutEnabled
		*out = new(bool)
		**out = **in
	}
	if in.FrontchannelLogoutURL != nil {
		in, out := &in.FrontchannelLogoutURL, &out.FrontchannelLogoutURL
		*out = new(string)
		**out = **in
	}
	if in.FullScopeAllowed != nil {
		in, out := &in.FullScopeAllowed, &out.FullScopeAllowed
		*out = new(bool)
		**out = **in
	}
	if in.ImplicitFlowEnabled != nil {
		in, out := &in.ImplicitFlowEnabled, &out.ImplicitFlowEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Import != nil {
		in, out := &in.Import, &out.Import
		*out = new(bool)
		**out = **in
	}
	if in.LoginTheme != nil {
		in, out := &in.LoginTheme, &out.LoginTheme
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Oauth2DeviceAuthorizationGrantEnabled != nil {
		in, out := &in.Oauth2DeviceAuthorizationGrantEnabled, &out.Oauth2DeviceAuthorizationGrantEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Oauth2DeviceCodeLifespan != nil {
		in, out := &in.Oauth2DeviceCodeLifespan, &out.Oauth2DeviceCodeLifespan
		*out = new(string)
		**out = **in
	}
	if in.Oauth2DevicePollingInterval != nil {
		in, out := &in.Oauth2DevicePollingInterval, &out.Oauth2DevicePollingInterval
		*out = new(string)
		**out = **in
	}
	if in.PkceCodeChallengeMethod != nil {
		in, out := &in.PkceCodeChallengeMethod, &out.PkceCodeChallengeMethod
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RootURL != nil {
		in, out := &in.RootURL, &out.RootURL
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountsEnabled != nil {
		in, out := &in.ServiceAccountsEnabled, &out.ServiceAccountsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StandardFlowEnabled != nil {
		in, out := &in.StandardFlowEnabled, &out.StandardFlowEnabled
		*out = new(bool)
		**out = **in
	}
	if in.UseRefreshTokens != nil {
		in, out := &in.UseRefreshTokens, &out.UseRefreshTokens
		*out = new(bool)
		**out = **in
	}
	if in.UseRefreshTokensClientCredentials != nil {
		in, out := &in.UseRefreshTokensClientCredentials, &out.UseRefreshTokensClientCredentials
		*out = new(bool)
		**out = **in
	}
	if in.ValidPostLogoutRedirectUris != nil {
		in, out := &in.ValidPostLogoutRedirectUris, &out.ValidPostLogoutRedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ValidRedirectUris != nil {
		in, out := &in.ValidRedirectUris, &out.ValidRedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WebOrigins != nil {
		in, out := &in.WebOrigins, &out.WebOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientInitParameters.
func (in *ClientInitParameters) DeepCopy() *ClientInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientList) DeepCopyInto(out *ClientList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Client, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientList.
func (in *ClientList) DeepCopy() *ClientList {
	if in == nil {
		return nil
	}
	out := new(ClientList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientObservation) DeepCopyInto(out *ClientObservation) {
	*out = *in
	if in.AccessTokenLifespan != nil {
		in, out := &in.AccessTokenLifespan, &out.AccessTokenLifespan
		*out = new(string)
		**out = **in
	}
	if in.AccessType != nil {
		in, out := &in.AccessType, &out.AccessType
		*out = new(string)
		**out = **in
	}
	if in.AdminURL != nil {
		in, out := &in.AdminURL, &out.AdminURL
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationFlowBindingOverrides != nil {
		in, out := &in.AuthenticationFlowBindingOverrides, &out.AuthenticationFlowBindingOverrides
		*out = make([]AuthenticationFlowBindingOverridesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = make([]AuthorizationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackchannelLogoutRevokeOfflineSessions != nil {
		in, out := &in.BackchannelLogoutRevokeOfflineSessions, &out.BackchannelLogoutRevokeOfflineSessions
		*out = new(bool)
		**out = **in
	}
	if in.BackchannelLogoutSessionRequired != nil {
		in, out := &in.BackchannelLogoutSessionRequired, &out.BackchannelLogoutSessionRequired
		*out = new(bool)
		**out = **in
	}
	if in.BackchannelLogoutURL != nil {
		in, out := &in.BackchannelLogoutURL, &out.BackchannelLogoutURL
		*out = new(string)
		**out = **in
	}
	if in.BaseURL != nil {
		in, out := &in.BaseURL, &out.BaseURL
		*out = new(string)
		**out = **in
	}
	if in.ClientAuthenticatorType != nil {
		in, out := &in.ClientAuthenticatorType, &out.ClientAuthenticatorType
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientOfflineSessionIdleTimeout != nil {
		in, out := &in.ClientOfflineSessionIdleTimeout, &out.ClientOfflineSessionIdleTimeout
		*out = new(string)
		**out = **in
	}
	if in.ClientOfflineSessionMaxLifespan != nil {
		in, out := &in.ClientOfflineSessionMaxLifespan, &out.ClientOfflineSessionMaxLifespan
		*out = new(string)
		**out = **in
	}
	if in.ClientSessionIdleTimeout != nil {
		in, out := &in.ClientSessionIdleTimeout, &out.ClientSessionIdleTimeout
		*out = new(string)
		**out = **in
	}
	if in.ClientSessionMaxLifespan != nil {
		in, out := &in.ClientSessionMaxLifespan, &out.ClientSessionMaxLifespan
		*out = new(string)
		**out = **in
	}
	if in.ConsentRequired != nil {
		in, out := &in.ConsentRequired, &out.ConsentRequired
		*out = new(bool)
		**out = **in
	}
	if in.ConsentScreenText != nil {
		in, out := &in.ConsentScreenText, &out.ConsentScreenText
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DirectAccessGrantsEnabled != nil {
		in, out := &in.DirectAccessGrantsEnabled, &out.DirectAccessGrantsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DisplayOnConsentScreen != nil {
		in, out := &in.DisplayOnConsentScreen, &out.DisplayOnConsentScreen
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExcludeSessionStateFromAuthResponse != nil {
		in, out := &in.ExcludeSessionStateFromAuthResponse, &out.ExcludeSessionStateFromAuthResponse
		*out = new(bool)
		**out = **in
	}
	if in.ExtraConfig != nil {
		in, out := &in.ExtraConfig, &out.ExtraConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FrontchannelLogoutEnabled != nil {
		in, out := &in.FrontchannelLogoutEnabled, &out.FrontchannelLogoutEnabled
		*out = new(bool)
		**out = **in
	}
	if in.FrontchannelLogoutURL != nil {
		in, out := &in.FrontchannelLogoutURL, &out.FrontchannelLogoutURL
		*out = new(string)
		**out = **in
	}
	if in.FullScopeAllowed != nil {
		in, out := &in.FullScopeAllowed, &out.FullScopeAllowed
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImplicitFlowEnabled != nil {
		in, out := &in.ImplicitFlowEnabled, &out.ImplicitFlowEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Import != nil {
		in, out := &in.Import, &out.Import
		*out = new(bool)
		**out = **in
	}
	if in.LoginTheme != nil {
		in, out := &in.LoginTheme, &out.LoginTheme
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Oauth2DeviceAuthorizationGrantEnabled != nil {
		in, out := &in.Oauth2DeviceAuthorizationGrantEnabled, &out.Oauth2DeviceAuthorizationGrantEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Oauth2DeviceCodeLifespan != nil {
		in, out := &in.Oauth2DeviceCodeLifespan, &out.Oauth2DeviceCodeLifespan
		*out = new(string)
		**out = **in
	}
	if in.Oauth2DevicePollingInterval != nil {
		in, out := &in.Oauth2DevicePollingInterval, &out.Oauth2DevicePollingInterval
		*out = new(string)
		**out = **in
	}
	if in.PkceCodeChallengeMethod != nil {
		in, out := &in.PkceCodeChallengeMethod, &out.PkceCodeChallengeMethod
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.ResourceServerID != nil {
		in, out := &in.ResourceServerID, &out.ResourceServerID
		*out = new(string)
		**out = **in
	}
	if in.RootURL != nil {
		in, out := &in.RootURL, &out.RootURL
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountUserID != nil {
		in, out := &in.ServiceAccountUserID, &out.ServiceAccountUserID
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountsEnabled != nil {
		in, out := &in.ServiceAccountsEnabled, &out.ServiceAccountsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StandardFlowEnabled != nil {
		in, out := &in.StandardFlowEnabled, &out.StandardFlowEnabled
		*out = new(bool)
		**out = **in
	}
	if in.UseRefreshTokens != nil {
		in, out := &in.UseRefreshTokens, &out.UseRefreshTokens
		*out = new(bool)
		**out = **in
	}
	if in.UseRefreshTokensClientCredentials != nil {
		in, out := &in.UseRefreshTokensClientCredentials, &out.UseRefreshTokensClientCredentials
		*out = new(bool)
		**out = **in
	}
	if in.ValidPostLogoutRedirectUris != nil {
		in, out := &in.ValidPostLogoutRedirectUris, &out.ValidPostLogoutRedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ValidRedirectUris != nil {
		in, out := &in.ValidRedirectUris, &out.ValidRedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WebOrigins != nil {
		in, out := &in.WebOrigins, &out.WebOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientObservation.
func (in *ClientObservation) DeepCopy() *ClientObservation {
	if in == nil {
		return nil
	}
	out := new(ClientObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientParameters) DeepCopyInto(out *ClientParameters) {
	*out = *in
	if in.AccessTokenLifespan != nil {
		in, out := &in.AccessTokenLifespan, &out.AccessTokenLifespan
		*out = new(string)
		**out = **in
	}
	if in.AccessType != nil {
		in, out := &in.AccessType, &out.AccessType
		*out = new(string)
		**out = **in
	}
	if in.AdminURL != nil {
		in, out := &in.AdminURL, &out.AdminURL
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationFlowBindingOverrides != nil {
		in, out := &in.AuthenticationFlowBindingOverrides, &out.AuthenticationFlowBindingOverrides
		*out = make([]AuthenticationFlowBindingOverridesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = make([]AuthorizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackchannelLogoutRevokeOfflineSessions != nil {
		in, out := &in.BackchannelLogoutRevokeOfflineSessions, &out.BackchannelLogoutRevokeOfflineSessions
		*out = new(bool)
		**out = **in
	}
	if in.BackchannelLogoutSessionRequired != nil {
		in, out := &in.BackchannelLogoutSessionRequired, &out.BackchannelLogoutSessionRequired
		*out = new(bool)
		**out = **in
	}
	if in.BackchannelLogoutURL != nil {
		in, out := &in.BackchannelLogoutURL, &out.BackchannelLogoutURL
		*out = new(string)
		**out = **in
	}
	if in.BaseURL != nil {
		in, out := &in.BaseURL, &out.BaseURL
		*out = new(string)
		**out = **in
	}
	if in.ClientAuthenticatorType != nil {
		in, out := &in.ClientAuthenticatorType, &out.ClientAuthenticatorType
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientIDRef != nil {
		in, out := &in.ClientIDRef, &out.ClientIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientIDSelector != nil {
		in, out := &in.ClientIDSelector, &out.ClientIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientOfflineSessionIdleTimeout != nil {
		in, out := &in.ClientOfflineSessionIdleTimeout, &out.ClientOfflineSessionIdleTimeout
		*out = new(string)
		**out = **in
	}
	if in.ClientOfflineSessionMaxLifespan != nil {
		in, out := &in.ClientOfflineSessionMaxLifespan, &out.ClientOfflineSessionMaxLifespan
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientSessionIdleTimeout != nil {
		in, out := &in.ClientSessionIdleTimeout, &out.ClientSessionIdleTimeout
		*out = new(string)
		**out = **in
	}
	if in.ClientSessionMaxLifespan != nil {
		in, out := &in.ClientSessionMaxLifespan, &out.ClientSessionMaxLifespan
		*out = new(string)
		**out = **in
	}
	if in.ConsentRequired != nil {
		in, out := &in.ConsentRequired, &out.ConsentRequired
		*out = new(bool)
		**out = **in
	}
	if in.ConsentScreenText != nil {
		in, out := &in.ConsentScreenText, &out.ConsentScreenText
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DirectAccessGrantsEnabled != nil {
		in, out := &in.DirectAccessGrantsEnabled, &out.DirectAccessGrantsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DisplayOnConsentScreen != nil {
		in, out := &in.DisplayOnConsentScreen, &out.DisplayOnConsentScreen
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExcludeSessionStateFromAuthResponse != nil {
		in, out := &in.ExcludeSessionStateFromAuthResponse, &out.ExcludeSessionStateFromAuthResponse
		*out = new(bool)
		**out = **in
	}
	if in.ExtraConfig != nil {
		in, out := &in.ExtraConfig, &out.ExtraConfig
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FrontchannelLogoutEnabled != nil {
		in, out := &in.FrontchannelLogoutEnabled, &out.FrontchannelLogoutEnabled
		*out = new(bool)
		**out = **in
	}
	if in.FrontchannelLogoutURL != nil {
		in, out := &in.FrontchannelLogoutURL, &out.FrontchannelLogoutURL
		*out = new(string)
		**out = **in
	}
	if in.FullScopeAllowed != nil {
		in, out := &in.FullScopeAllowed, &out.FullScopeAllowed
		*out = new(bool)
		**out = **in
	}
	if in.ImplicitFlowEnabled != nil {
		in, out := &in.ImplicitFlowEnabled, &out.ImplicitFlowEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Import != nil {
		in, out := &in.Import, &out.Import
		*out = new(bool)
		**out = **in
	}
	if in.LoginTheme != nil {
		in, out := &in.LoginTheme, &out.LoginTheme
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Oauth2DeviceAuthorizationGrantEnabled != nil {
		in, out := &in.Oauth2DeviceAuthorizationGrantEnabled, &out.Oauth2DeviceAuthorizationGrantEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Oauth2DeviceCodeLifespan != nil {
		in, out := &in.Oauth2DeviceCodeLifespan, &out.Oauth2DeviceCodeLifespan
		*out = new(string)
		**out = **in
	}
	if in.Oauth2DevicePollingInterval != nil {
		in, out := &in.Oauth2DevicePollingInterval, &out.Oauth2DevicePollingInterval
		*out = new(string)
		**out = **in
	}
	if in.PkceCodeChallengeMethod != nil {
		in, out := &in.PkceCodeChallengeMethod, &out.PkceCodeChallengeMethod
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RootURL != nil {
		in, out := &in.RootURL, &out.RootURL
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountsEnabled != nil {
		in, out := &in.ServiceAccountsEnabled, &out.ServiceAccountsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StandardFlowEnabled != nil {
		in, out := &in.StandardFlowEnabled, &out.StandardFlowEnabled
		*out = new(bool)
		**out = **in
	}
	if in.UseRefreshTokens != nil {
		in, out := &in.UseRefreshTokens, &out.UseRefreshTokens
		*out = new(bool)
		**out = **in
	}
	if in.UseRefreshTokensClientCredentials != nil {
		in, out := &in.UseRefreshTokensClientCredentials, &out.UseRefreshTokensClientCredentials
		*out = new(bool)
		**out = **in
	}
	if in.ValidPostLogoutRedirectUris != nil {
		in, out := &in.ValidPostLogoutRedirectUris, &out.ValidPostLogoutRedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ValidRedirectUris != nil {
		in, out := &in.ValidRedirectUris, &out.ValidRedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WebOrigins != nil {
		in, out := &in.WebOrigins, &out.WebOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientParameters.
func (in *ClientParameters) DeepCopy() *ClientParameters {
	if in == nil {
		return nil
	}
	out := new(ClientParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientPermissions) DeepCopyInto(out *ClientPermissions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientPermissions.
func (in *ClientPermissions) DeepCopy() *ClientPermissions {
	if in == nil {
		return nil
	}
	out := new(ClientPermissions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientPermissions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientPermissionsInitParameters) DeepCopyInto(out *ClientPermissionsInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientIDRef != nil {
		in, out := &in.ClientIDRef, &out.ClientIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientIDSelector != nil {
		in, out := &in.ClientIDSelector, &out.ClientIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigureScope != nil {
		in, out := &in.ConfigureScope, &out.ConfigureScope
		*out = make([]ConfigureScopeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManageScope != nil {
		in, out := &in.ManageScope, &out.ManageScope
		*out = make([]ManageScopeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MapRolesClientScopeScope != nil {
		in, out := &in.MapRolesClientScopeScope, &out.MapRolesClientScopeScope
		*out = make([]MapRolesClientScopeScopeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MapRolesCompositeScope != nil {
		in, out := &in.MapRolesCompositeScope, &out.MapRolesCompositeScope
		*out = make([]MapRolesCompositeScopeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MapRolesScope != nil {
		in, out := &in.MapRolesScope, &out.MapRolesScope
		*out = make([]MapRolesScopeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TokenExchangeScope != nil {
		in, out := &in.TokenExchangeScope, &out.TokenExchangeScope
		*out = make([]TokenExchangeScopeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ViewScope != nil {
		in, out := &in.ViewScope, &out.ViewScope
		*out = make([]ViewScopeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientPermissionsInitParameters.
func (in *ClientPermissionsInitParameters) DeepCopy() *ClientPermissionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientPermissionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientPermissionsList) DeepCopyInto(out *ClientPermissionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClientPermissions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientPermissionsList.
func (in *ClientPermissionsList) DeepCopy() *ClientPermissionsList {
	if in == nil {
		return nil
	}
	out := new(ClientPermissionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientPermissionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientPermissionsObservation) DeepCopyInto(out *ClientPermissionsObservation) {
	*out = *in
	if in.AuthorizationResourceServerID != nil {
		in, out := &in.AuthorizationResourceServerID, &out.AuthorizationResourceServerID
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ConfigureScope != nil {
		in, out := &in.ConfigureScope, &out.ConfigureScope
		*out = make([]ConfigureScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ManageScope != nil {
		in, out := &in.ManageScope, &out.ManageScope
		*out = make([]ManageScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MapRolesClientScopeScope != nil {
		in, out := &in.MapRolesClientScopeScope, &out.MapRolesClientScopeScope
		*out = make([]MapRolesClientScopeScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MapRolesCompositeScope != nil {
		in, out := &in.MapRolesCompositeScope, &out.MapRolesCompositeScope
		*out = make([]MapRolesCompositeScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MapRolesScope != nil {
		in, out := &in.MapRolesScope, &out.MapRolesScope
		*out = make([]MapRolesScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.TokenExchangeScope != nil {
		in, out := &in.TokenExchangeScope, &out.TokenExchangeScope
		*out = make([]TokenExchangeScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ViewScope != nil {
		in, out := &in.ViewScope, &out.ViewScope
		*out = make([]ViewScopeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientPermissionsObservation.
func (in *ClientPermissionsObservation) DeepCopy() *ClientPermissionsObservation {
	if in == nil {
		return nil
	}
	out := new(ClientPermissionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientPermissionsParameters) DeepCopyInto(out *ClientPermissionsParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientIDRef != nil {
		in, out := &in.ClientIDRef, &out.ClientIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientIDSelector != nil {
		in, out := &in.ClientIDSelector, &out.ClientIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigureScope != nil {
		in, out := &in.ConfigureScope, &out.ConfigureScope
		*out = make([]ConfigureScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManageScope != nil {
		in, out := &in.ManageScope, &out.ManageScope
		*out = make([]ManageScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MapRolesClientScopeScope != nil {
		in, out := &in.MapRolesClientScopeScope, &out.MapRolesClientScopeScope
		*out = make([]MapRolesClientScopeScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MapRolesCompositeScope != nil {
		in, out := &in.MapRolesCompositeScope, &out.MapRolesCompositeScope
		*out = make([]MapRolesCompositeScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MapRolesScope != nil {
		in, out := &in.MapRolesScope, &out.MapRolesScope
		*out = make([]MapRolesScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TokenExchangeScope != nil {
		in, out := &in.TokenExchangeScope, &out.TokenExchangeScope
		*out = make([]TokenExchangeScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ViewScope != nil {
		in, out := &in.ViewScope, &out.ViewScope
		*out = make([]ViewScopeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientPermissionsParameters.
func (in *ClientPermissionsParameters) DeepCopy() *ClientPermissionsParameters {
	if in == nil {
		return nil
	}
	out := new(ClientPermissionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientPermissionsSpec) DeepCopyInto(out *ClientPermissionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientPermissionsSpec.
func (in *ClientPermissionsSpec) DeepCopy() *ClientPermissionsSpec {
	if in == nil {
		return nil
	}
	out := new(ClientPermissionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientPermissionsStatus) DeepCopyInto(out *ClientPermissionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientPermissionsStatus.
func (in *ClientPermissionsStatus) DeepCopy() *ClientPermissionsStatus {
	if in == nil {
		return nil
	}
	out := new(ClientPermissionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientRolePolicy) DeepCopyInto(out *ClientRolePolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientRolePolicy.
func (in *ClientRolePolicy) DeepCopy() *ClientRolePolicy {
	if in == nil {
		return nil
	}
	out := new(ClientRolePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientRolePolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientRolePolicyInitParameters) DeepCopyInto(out *ClientRolePolicyInitParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Logic != nil {
		in, out := &in.Logic, &out.Logic
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceServerID != nil {
		in, out := &in.ResourceServerID, &out.ResourceServerID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make([]RoleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientRolePolicyInitParameters.
func (in *ClientRolePolicyInitParameters) DeepCopy() *ClientRolePolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientRolePolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientRolePolicyList) DeepCopyInto(out *ClientRolePolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClientRolePolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientRolePolicyList.
func (in *ClientRolePolicyList) DeepCopy() *ClientRolePolicyList {
	if in == nil {
		return nil
	}
	out := new(ClientRolePolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientRolePolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientRolePolicyObservation) DeepCopyInto(out *ClientRolePolicyObservation) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Logic != nil {
		in, out := &in.Logic, &out.Logic
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.ResourceServerID != nil {
		in, out := &in.ResourceServerID, &out.ResourceServerID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make([]RoleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientRolePolicyObservation.
func (in *ClientRolePolicyObservation) DeepCopy() *ClientRolePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ClientRolePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientRolePolicyParameters) DeepCopyInto(out *ClientRolePolicyParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Logic != nil {
		in, out := &in.Logic, &out.Logic
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceServerID != nil {
		in, out := &in.ResourceServerID, &out.ResourceServerID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make([]RoleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientRolePolicyParameters.
func (in *ClientRolePolicyParameters) DeepCopy() *ClientRolePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ClientRolePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientRolePolicySpec) DeepCopyInto(out *ClientRolePolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientRolePolicySpec.
func (in *ClientRolePolicySpec) DeepCopy() *ClientRolePolicySpec {
	if in == nil {
		return nil
	}
	out := new(ClientRolePolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientRolePolicyStatus) DeepCopyInto(out *ClientRolePolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientRolePolicyStatus.
func (in *ClientRolePolicyStatus) DeepCopy() *ClientRolePolicyStatus {
	if in == nil {
		return nil
	}
	out := new(ClientRolePolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientScope) DeepCopyInto(out *ClientScope) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientScope.
func (in *ClientScope) DeepCopy() *ClientScope {
	if in == nil {
		return nil
	}
	out := new(ClientScope)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientScope) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientScopeInitParameters) DeepCopyInto(out *ClientScopeInitParameters) {
	*out = *in
	if in.ConsentScreenText != nil {
		in, out := &in.ConsentScreenText, &out.ConsentScreenText
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GuiOrder != nil {
		in, out := &in.GuiOrder, &out.GuiOrder
		*out = new(float64)
		**out = **in
	}
	if in.IncludeInTokenScope != nil {
		in, out := &in.IncludeInTokenScope, &out.IncludeInTokenScope
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientScopeInitParameters.
func (in *ClientScopeInitParameters) DeepCopy() *ClientScopeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientScopeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientScopeList) DeepCopyInto(out *ClientScopeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClientScope, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientScopeList.
func (in *ClientScopeList) DeepCopy() *ClientScopeList {
	if in == nil {
		return nil
	}
	out := new(ClientScopeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientScopeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientScopeObservation) DeepCopyInto(out *ClientScopeObservation) {
	*out = *in
	if in.ConsentScreenText != nil {
		in, out := &in.ConsentScreenText, &out.ConsentScreenText
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GuiOrder != nil {
		in, out := &in.GuiOrder, &out.GuiOrder
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IncludeInTokenScope != nil {
		in, out := &in.IncludeInTokenScope, &out.IncludeInTokenScope
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientScopeObservation.
func (in *ClientScopeObservation) DeepCopy() *ClientScopeObservation {
	if in == nil {
		return nil
	}
	out := new(ClientScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientScopeParameters) DeepCopyInto(out *ClientScopeParameters) {
	*out = *in
	if in.ConsentScreenText != nil {
		in, out := &in.ConsentScreenText, &out.ConsentScreenText
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GuiOrder != nil {
		in, out := &in.GuiOrder, &out.GuiOrder
		*out = new(float64)
		**out = **in
	}
	if in.IncludeInTokenScope != nil {
		in, out := &in.IncludeInTokenScope, &out.IncludeInTokenScope
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientScopeParameters.
func (in *ClientScopeParameters) DeepCopy() *ClientScopeParameters {
	if in == nil {
		return nil
	}
	out := new(ClientScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientScopeSpec) DeepCopyInto(out *ClientScopeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientScopeSpec.
func (in *ClientScopeSpec) DeepCopy() *ClientScopeSpec {
	if in == nil {
		return nil
	}
	out := new(ClientScopeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientScopeStatus) DeepCopyInto(out *ClientScopeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientScopeStatus.
func (in *ClientScopeStatus) DeepCopy() *ClientScopeStatus {
	if in == nil {
		return nil
	}
	out := new(ClientScopeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientServiceAccountRealmRole) DeepCopyInto(out *ClientServiceAccountRealmRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientServiceAccountRealmRole.
func (in *ClientServiceAccountRealmRole) DeepCopy() *ClientServiceAccountRealmRole {
	if in == nil {
		return nil
	}
	out := new(ClientServiceAccountRealmRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientServiceAccountRealmRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientServiceAccountRealmRoleInitParameters) DeepCopyInto(out *ClientServiceAccountRealmRoleInitParameters) {
	*out = *in
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountUserClientIDRef != nil {
		in, out := &in.ServiceAccountUserClientIDRef, &out.ServiceAccountUserClientIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountUserClientIDSelector != nil {
		in, out := &in.ServiceAccountUserClientIDSelector, &out.ServiceAccountUserClientIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountUserID != nil {
		in, out := &in.ServiceAccountUserID, &out.ServiceAccountUserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientServiceAccountRealmRoleInitParameters.
func (in *ClientServiceAccountRealmRoleInitParameters) DeepCopy() *ClientServiceAccountRealmRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientServiceAccountRealmRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientServiceAccountRealmRoleList) DeepCopyInto(out *ClientServiceAccountRealmRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClientServiceAccountRealmRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientServiceAccountRealmRoleList.
func (in *ClientServiceAccountRealmRoleList) DeepCopy() *ClientServiceAccountRealmRoleList {
	if in == nil {
		return nil
	}
	out := new(ClientServiceAccountRealmRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientServiceAccountRealmRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientServiceAccountRealmRoleObservation) DeepCopyInto(out *ClientServiceAccountRealmRoleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountUserID != nil {
		in, out := &in.ServiceAccountUserID, &out.ServiceAccountUserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientServiceAccountRealmRoleObservation.
func (in *ClientServiceAccountRealmRoleObservation) DeepCopy() *ClientServiceAccountRealmRoleObservation {
	if in == nil {
		return nil
	}
	out := new(ClientServiceAccountRealmRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientServiceAccountRealmRoleParameters) DeepCopyInto(out *ClientServiceAccountRealmRoleParameters) {
	*out = *in
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountUserClientIDRef != nil {
		in, out := &in.ServiceAccountUserClientIDRef, &out.ServiceAccountUserClientIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountUserClientIDSelector != nil {
		in, out := &in.ServiceAccountUserClientIDSelector, &out.ServiceAccountUserClientIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountUserID != nil {
		in, out := &in.ServiceAccountUserID, &out.ServiceAccountUserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientServiceAccountRealmRoleParameters.
func (in *ClientServiceAccountRealmRoleParameters) DeepCopy() *ClientServiceAccountRealmRoleParameters {
	if in == nil {
		return nil
	}
	out := new(ClientServiceAccountRealmRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientServiceAccountRealmRoleSpec) DeepCopyInto(out *ClientServiceAccountRealmRoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientServiceAccountRealmRoleSpec.
func (in *ClientServiceAccountRealmRoleSpec) DeepCopy() *ClientServiceAccountRealmRoleSpec {
	if in == nil {
		return nil
	}
	out := new(ClientServiceAccountRealmRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientServiceAccountRealmRoleStatus) DeepCopyInto(out *ClientServiceAccountRealmRoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientServiceAccountRealmRoleStatus.
func (in *ClientServiceAccountRealmRoleStatus) DeepCopy() *ClientServiceAccountRealmRoleStatus {
	if in == nil {
		return nil
	}
	out := new(ClientServiceAccountRealmRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientServiceAccountRole) DeepCopyInto(out *ClientServiceAccountRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientServiceAccountRole.
func (in *ClientServiceAccountRole) DeepCopy() *ClientServiceAccountRole {
	if in == nil {
		return nil
	}
	out := new(ClientServiceAccountRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientServiceAccountRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientServiceAccountRoleInitParameters) DeepCopyInto(out *ClientServiceAccountRoleInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientIDRef != nil {
		in, out := &in.ClientIDRef, &out.ClientIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientIDSelector != nil {
		in, out := &in.ClientIDSelector, &out.ClientIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.RoleRef != nil {
		in, out := &in.RoleRef, &out.RoleRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleSelector != nil {
		in, out := &in.RoleSelector, &out.RoleSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountUserClientIDRef != nil {
		in, out := &in.ServiceAccountUserClientIDRef, &out.ServiceAccountUserClientIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountUserClientIDSelector != nil {
		in, out := &in.ServiceAccountUserClientIDSelector, &out.ServiceAccountUserClientIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountUserID != nil {
		in, out := &in.ServiceAccountUserID, &out.ServiceAccountUserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientServiceAccountRoleInitParameters.
func (in *ClientServiceAccountRoleInitParameters) DeepCopy() *ClientServiceAccountRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientServiceAccountRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientServiceAccountRoleList) DeepCopyInto(out *ClientServiceAccountRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClientServiceAccountRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientServiceAccountRoleList.
func (in *ClientServiceAccountRoleList) DeepCopy() *ClientServiceAccountRoleList {
	if in == nil {
		return nil
	}
	out := new(ClientServiceAccountRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientServiceAccountRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientServiceAccountRoleObservation) DeepCopyInto(out *ClientServiceAccountRoleObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountUserID != nil {
		in, out := &in.ServiceAccountUserID, &out.ServiceAccountUserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientServiceAccountRoleObservation.
func (in *ClientServiceAccountRoleObservation) DeepCopy() *ClientServiceAccountRoleObservation {
	if in == nil {
		return nil
	}
	out := new(ClientServiceAccountRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientServiceAccountRoleParameters) DeepCopyInto(out *ClientServiceAccountRoleParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientIDRef != nil {
		in, out := &in.ClientIDRef, &out.ClientIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientIDSelector != nil {
		in, out := &in.ClientIDSelector, &out.ClientIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.RoleRef != nil {
		in, out := &in.RoleRef, &out.RoleRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleSelector != nil {
		in, out := &in.RoleSelector, &out.RoleSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountUserClientIDRef != nil {
		in, out := &in.ServiceAccountUserClientIDRef, &out.ServiceAccountUserClientIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountUserClientIDSelector != nil {
		in, out := &in.ServiceAccountUserClientIDSelector, &out.ServiceAccountUserClientIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountUserID != nil {
		in, out := &in.ServiceAccountUserID, &out.ServiceAccountUserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientServiceAccountRoleParameters.
func (in *ClientServiceAccountRoleParameters) DeepCopy() *ClientServiceAccountRoleParameters {
	if in == nil {
		return nil
	}
	out := new(ClientServiceAccountRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientServiceAccountRoleSpec) DeepCopyInto(out *ClientServiceAccountRoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientServiceAccountRoleSpec.
func (in *ClientServiceAccountRoleSpec) DeepCopy() *ClientServiceAccountRoleSpec {
	if in == nil {
		return nil
	}
	out := new(ClientServiceAccountRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientServiceAccountRoleStatus) DeepCopyInto(out *ClientServiceAccountRoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientServiceAccountRoleStatus.
func (in *ClientServiceAccountRoleStatus) DeepCopy() *ClientServiceAccountRoleStatus {
	if in == nil {
		return nil
	}
	out := new(ClientServiceAccountRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientSpec) DeepCopyInto(out *ClientSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientSpec.
func (in *ClientSpec) DeepCopy() *ClientSpec {
	if in == nil {
		return nil
	}
	out := new(ClientSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientStatus) DeepCopyInto(out *ClientStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientStatus.
func (in *ClientStatus) DeepCopy() *ClientStatus {
	if in == nil {
		return nil
	}
	out := new(ClientStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientUserPolicy) DeepCopyInto(out *ClientUserPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientUserPolicy.
func (in *ClientUserPolicy) DeepCopy() *ClientUserPolicy {
	if in == nil {
		return nil
	}
	out := new(ClientUserPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientUserPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientUserPolicyInitParameters) DeepCopyInto(out *ClientUserPolicyInitParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Logic != nil {
		in, out := &in.Logic, &out.Logic
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceServerID != nil {
		in, out := &in.ResourceServerID, &out.ResourceServerID
		*out = new(string)
		**out = **in
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientUserPolicyInitParameters.
func (in *ClientUserPolicyInitParameters) DeepCopy() *ClientUserPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientUserPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientUserPolicyList) DeepCopyInto(out *ClientUserPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClientUserPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientUserPolicyList.
func (in *ClientUserPolicyList) DeepCopy() *ClientUserPolicyList {
	if in == nil {
		return nil
	}
	out := new(ClientUserPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClientUserPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientUserPolicyObservation) DeepCopyInto(out *ClientUserPolicyObservation) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Logic != nil {
		in, out := &in.Logic, &out.Logic
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.ResourceServerID != nil {
		in, out := &in.ResourceServerID, &out.ResourceServerID
		*out = new(string)
		**out = **in
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientUserPolicyObservation.
func (in *ClientUserPolicyObservation) DeepCopy() *ClientUserPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ClientUserPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientUserPolicyParameters) DeepCopyInto(out *ClientUserPolicyParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Logic != nil {
		in, out := &in.Logic, &out.Logic
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RealmID != nil {
		in, out := &in.RealmID, &out.RealmID
		*out = new(string)
		**out = **in
	}
	if in.RealmIDRef != nil {
		in, out := &in.RealmIDRef, &out.RealmIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RealmIDSelector != nil {
		in, out := &in.RealmIDSelector, &out.RealmIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceServerID != nil {
		in, out := &in.ResourceServerID, &out.ResourceServerID
		*out = new(string)
		**out = **in
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientUserPolicyParameters.
func (in *ClientUserPolicyParameters) DeepCopy() *ClientUserPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ClientUserPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientUserPolicySpec) DeepCopyInto(out *ClientUserPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientUserPolicySpec.
func (in *ClientUserPolicySpec) DeepCopy() *ClientUserPolicySpec {
	if in == nil {
		return nil
	}
	out := new(ClientUserPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientUserPolicyStatus) DeepCopyInto(out *ClientUserPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientUserPolicyStatus.
func (in *ClientUserPolicyStatus) DeepCopy() *ClientUserPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(ClientUserPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigureScopeInitParameters) DeepCopyInto(out *ConfigureScopeInitParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigureScopeInitParameters.
func (in *ConfigureScopeInitParameters) DeepCopy() *ConfigureScopeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigureScopeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigureScopeObservation) DeepCopyInto(out *ConfigureScopeObservation) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigureScopeObservation.
func (in *ConfigureScopeObservation) DeepCopy() *ConfigureScopeObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigureScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigureScopeParameters) DeepCopyInto(out *ConfigureScopeParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigureScopeParameters.
func (in *ConfigureScopeParameters) DeepCopy() *ConfigureScopeParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigureScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupsInitParameters) DeepCopyInto(out *GroupsInitParameters) {
	*out = *in
	if in.ExtendChildren != nil {
		in, out := &in.ExtendChildren, &out.ExtendChildren
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupsInitParameters.
func (in *GroupsInitParameters) DeepCopy() *GroupsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupsObservation) DeepCopyInto(out *GroupsObservation) {
	*out = *in
	if in.ExtendChildren != nil {
		in, out := &in.ExtendChildren, &out.ExtendChildren
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupsObservation.
func (in *GroupsObservation) DeepCopy() *GroupsObservation {
	if in == nil {
		return nil
	}
	out := new(GroupsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupsParameters) DeepCopyInto(out *GroupsParameters) {
	*out = *in
	if in.ExtendChildren != nil {
		in, out := &in.ExtendChildren, &out.ExtendChildren
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupsParameters.
func (in *GroupsParameters) DeepCopy() *GroupsParameters {
	if in == nil {
		return nil
	}
	out := new(GroupsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManageScopeInitParameters) DeepCopyInto(out *ManageScopeInitParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManageScopeInitParameters.
func (in *ManageScopeInitParameters) DeepCopy() *ManageScopeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManageScopeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManageScopeObservation) DeepCopyInto(out *ManageScopeObservation) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManageScopeObservation.
func (in *ManageScopeObservation) DeepCopy() *ManageScopeObservation {
	if in == nil {
		return nil
	}
	out := new(ManageScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManageScopeParameters) DeepCopyInto(out *ManageScopeParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManageScopeParameters.
func (in *ManageScopeParameters) DeepCopy() *ManageScopeParameters {
	if in == nil {
		return nil
	}
	out := new(ManageScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MapRolesClientScopeScopeInitParameters) DeepCopyInto(out *MapRolesClientScopeScopeInitParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MapRolesClientScopeScopeInitParameters.
func (in *MapRolesClientScopeScopeInitParameters) DeepCopy() *MapRolesClientScopeScopeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MapRolesClientScopeScopeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MapRolesClientScopeScopeObservation) DeepCopyInto(out *MapRolesClientScopeScopeObservation) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MapRolesClientScopeScopeObservation.
func (in *MapRolesClientScopeScopeObservation) DeepCopy() *MapRolesClientScopeScopeObservation {
	if in == nil {
		return nil
	}
	out := new(MapRolesClientScopeScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MapRolesClientScopeScopeParameters) DeepCopyInto(out *MapRolesClientScopeScopeParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MapRolesClientScopeScopeParameters.
func (in *MapRolesClientScopeScopeParameters) DeepCopy() *MapRolesClientScopeScopeParameters {
	if in == nil {
		return nil
	}
	out := new(MapRolesClientScopeScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MapRolesCompositeScopeInitParameters) DeepCopyInto(out *MapRolesCompositeScopeInitParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MapRolesCompositeScopeInitParameters.
func (in *MapRolesCompositeScopeInitParameters) DeepCopy() *MapRolesCompositeScopeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MapRolesCompositeScopeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MapRolesCompositeScopeObservation) DeepCopyInto(out *MapRolesCompositeScopeObservation) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MapRolesCompositeScopeObservation.
func (in *MapRolesCompositeScopeObservation) DeepCopy() *MapRolesCompositeScopeObservation {
	if in == nil {
		return nil
	}
	out := new(MapRolesCompositeScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MapRolesCompositeScopeParameters) DeepCopyInto(out *MapRolesCompositeScopeParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MapRolesCompositeScopeParameters.
func (in *MapRolesCompositeScopeParameters) DeepCopy() *MapRolesCompositeScopeParameters {
	if in == nil {
		return nil
	}
	out := new(MapRolesCompositeScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MapRolesScopeInitParameters) DeepCopyInto(out *MapRolesScopeInitParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MapRolesScopeInitParameters.
func (in *MapRolesScopeInitParameters) DeepCopy() *MapRolesScopeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MapRolesScopeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MapRolesScopeObservation) DeepCopyInto(out *MapRolesScopeObservation) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MapRolesScopeObservation.
func (in *MapRolesScopeObservation) DeepCopy() *MapRolesScopeObservation {
	if in == nil {
		return nil
	}
	out := new(MapRolesScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MapRolesScopeParameters) DeepCopyInto(out *MapRolesScopeParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MapRolesScopeParameters.
func (in *MapRolesScopeParameters) DeepCopy() *MapRolesScopeParameters {
	if in == nil {
		return nil
	}
	out := new(MapRolesScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleInitParameters) DeepCopyInto(out *RoleInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleInitParameters.
func (in *RoleInitParameters) DeepCopy() *RoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(RoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleObservation) DeepCopyInto(out *RoleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleObservation.
func (in *RoleObservation) DeepCopy() *RoleObservation {
	if in == nil {
		return nil
	}
	out := new(RoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleParameters) DeepCopyInto(out *RoleParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleParameters.
func (in *RoleParameters) DeepCopy() *RoleParameters {
	if in == nil {
		return nil
	}
	out := new(RoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenExchangeScopeInitParameters) DeepCopyInto(out *TokenExchangeScopeInitParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenExchangeScopeInitParameters.
func (in *TokenExchangeScopeInitParameters) DeepCopy() *TokenExchangeScopeInitParameters {
	if in == nil {
		return nil
	}
	out := new(TokenExchangeScopeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenExchangeScopeObservation) DeepCopyInto(out *TokenExchangeScopeObservation) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenExchangeScopeObservation.
func (in *TokenExchangeScopeObservation) DeepCopy() *TokenExchangeScopeObservation {
	if in == nil {
		return nil
	}
	out := new(TokenExchangeScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenExchangeScopeParameters) DeepCopyInto(out *TokenExchangeScopeParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenExchangeScopeParameters.
func (in *TokenExchangeScopeParameters) DeepCopy() *TokenExchangeScopeParameters {
	if in == nil {
		return nil
	}
	out := new(TokenExchangeScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ViewScopeInitParameters) DeepCopyInto(out *ViewScopeInitParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ViewScopeInitParameters.
func (in *ViewScopeInitParameters) DeepCopy() *ViewScopeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ViewScopeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ViewScopeObservation) DeepCopyInto(out *ViewScopeObservation) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ViewScopeObservation.
func (in *ViewScopeObservation) DeepCopy() *ViewScopeObservation {
	if in == nil {
		return nil
	}
	out := new(ViewScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ViewScopeParameters) DeepCopyInto(out *ViewScopeParameters) {
	*out = *in
	if in.DecisionStrategy != nil {
		in, out := &in.DecisionStrategy, &out.DecisionStrategy
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ViewScopeParameters.
func (in *ViewScopeParameters) DeepCopy() *ViewScopeParameters {
	if in == nil {
		return nil
	}
	out := new(ViewScopeParameters)
	in.DeepCopyInto(out)
	return out
}
