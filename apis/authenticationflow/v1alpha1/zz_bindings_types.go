/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BindingsInitParameters struct {

	// The alias of the flow to assign to the realm BrowserFlow.
	// Which flow should be used for BrowserFlow
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-keycloak/apis/authenticationflow/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-keycloak/config/common.AuthenticationFlowAliasExtractor()
	// +crossplane:generate:reference:refFieldName=BrowserFlowRef
	// +crossplane:generate:reference:selectorFieldName=BrowserFlowSelector
	BrowserFlow *string `json:"browserFlow,omitempty" tf:"browser_flow,omitempty"`

	// Reference to a Flow in authenticationflow to populate browserFlow.
	// +kubebuilder:validation:Optional
	BrowserFlowRef *v1.Reference `json:"browserFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authenticationflow to populate browserFlow.
	// +kubebuilder:validation:Optional
	BrowserFlowSelector *v1.Selector `json:"browserFlowSelector,omitempty" tf:"-"`

	// The alias of the flow to assign to the realm ClientAuthenticationFlow.
	// Which flow should be used for ClientAuthenticationFlow
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-keycloak/apis/authenticationflow/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-keycloak/config/common.AuthenticationFlowAliasExtractor()
	// +crossplane:generate:reference:refFieldName=ClientAuthenticationFlowRef
	// +crossplane:generate:reference:selectorFieldName=ClientAuthenticationFlowSelector
	ClientAuthenticationFlow *string `json:"clientAuthenticationFlow,omitempty" tf:"client_authentication_flow,omitempty"`

	// Reference to a Flow in authenticationflow to populate clientAuthenticationFlow.
	// +kubebuilder:validation:Optional
	ClientAuthenticationFlowRef *v1.Reference `json:"clientAuthenticationFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authenticationflow to populate clientAuthenticationFlow.
	// +kubebuilder:validation:Optional
	ClientAuthenticationFlowSelector *v1.Selector `json:"clientAuthenticationFlowSelector,omitempty" tf:"-"`

	// The alias of the flow to assign to the realm DirectGrantFlow.
	// Which flow should be used for DirectGrantFlow
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-keycloak/apis/authenticationflow/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-keycloak/config/common.AuthenticationFlowAliasExtractor()
	// +crossplane:generate:reference:refFieldName=DirectGrantFlowRef
	// +crossplane:generate:reference:selectorFieldName=DirectGrantFlowSelector
	DirectGrantFlow *string `json:"directGrantFlow,omitempty" tf:"direct_grant_flow,omitempty"`

	// Reference to a Flow in authenticationflow to populate directGrantFlow.
	// +kubebuilder:validation:Optional
	DirectGrantFlowRef *v1.Reference `json:"directGrantFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authenticationflow to populate directGrantFlow.
	// +kubebuilder:validation:Optional
	DirectGrantFlowSelector *v1.Selector `json:"directGrantFlowSelector,omitempty" tf:"-"`

	// The alias of the flow to assign to the realm DockerAuthenticationFlow.
	// Which flow should be used for DockerAuthenticationFlow
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-keycloak/apis/authenticationflow/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-keycloak/config/common.AuthenticationFlowAliasExtractor()
	// +crossplane:generate:reference:refFieldName=DockerAuthenticationFlowRef
	// +crossplane:generate:reference:selectorFieldName=DockerAuthenticationFlowSelector
	DockerAuthenticationFlow *string `json:"dockerAuthenticationFlow,omitempty" tf:"docker_authentication_flow,omitempty"`

	// Reference to a Flow in authenticationflow to populate dockerAuthenticationFlow.
	// +kubebuilder:validation:Optional
	DockerAuthenticationFlowRef *v1.Reference `json:"dockerAuthenticationFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authenticationflow to populate dockerAuthenticationFlow.
	// +kubebuilder:validation:Optional
	DockerAuthenticationFlowSelector *v1.Selector `json:"dockerAuthenticationFlowSelector,omitempty" tf:"-"`

	// The realm the authentication flow binding exists in.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-keycloak/apis/realm/v1alpha1.Realm
	RealmID *string `json:"realmId,omitempty" tf:"realm_id,omitempty"`

	// Reference to a Realm in realm to populate realmId.
	// +kubebuilder:validation:Optional
	RealmIDRef *v1.Reference `json:"realmIdRef,omitempty" tf:"-"`

	// Selector for a Realm in realm to populate realmId.
	// +kubebuilder:validation:Optional
	RealmIDSelector *v1.Selector `json:"realmIdSelector,omitempty" tf:"-"`

	// The alias of the flow to assign to the realm RegistrationFlow.
	// Which flow should be used for RegistrationFlow
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-keycloak/apis/authenticationflow/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-keycloak/config/common.AuthenticationFlowAliasExtractor()
	// +crossplane:generate:reference:refFieldName=RegistrationFlowRef
	// +crossplane:generate:reference:selectorFieldName=RegistrationFlowSelector
	RegistrationFlow *string `json:"registrationFlow,omitempty" tf:"registration_flow,omitempty"`

	// Reference to a Flow in authenticationflow to populate registrationFlow.
	// +kubebuilder:validation:Optional
	RegistrationFlowRef *v1.Reference `json:"registrationFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authenticationflow to populate registrationFlow.
	// +kubebuilder:validation:Optional
	RegistrationFlowSelector *v1.Selector `json:"registrationFlowSelector,omitempty" tf:"-"`

	// The alias of the flow to assign to the realm ResetCredentialsFlow.
	// Which flow should be used for ResetCredentialsFlow
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-keycloak/apis/authenticationflow/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-keycloak/config/common.AuthenticationFlowAliasExtractor()
	// +crossplane:generate:reference:refFieldName=ResetCredentialsFlowRef
	// +crossplane:generate:reference:selectorFieldName=ResetCredentialsFlowSelector
	ResetCredentialsFlow *string `json:"resetCredentialsFlow,omitempty" tf:"reset_credentials_flow,omitempty"`

	// Reference to a Flow in authenticationflow to populate resetCredentialsFlow.
	// +kubebuilder:validation:Optional
	ResetCredentialsFlowRef *v1.Reference `json:"resetCredentialsFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authenticationflow to populate resetCredentialsFlow.
	// +kubebuilder:validation:Optional
	ResetCredentialsFlowSelector *v1.Selector `json:"resetCredentialsFlowSelector,omitempty" tf:"-"`
}

type BindingsObservation struct {

	// The alias of the flow to assign to the realm BrowserFlow.
	// Which flow should be used for BrowserFlow
	BrowserFlow *string `json:"browserFlow,omitempty" tf:"browser_flow,omitempty"`

	// The alias of the flow to assign to the realm ClientAuthenticationFlow.
	// Which flow should be used for ClientAuthenticationFlow
	ClientAuthenticationFlow *string `json:"clientAuthenticationFlow,omitempty" tf:"client_authentication_flow,omitempty"`

	// The alias of the flow to assign to the realm DirectGrantFlow.
	// Which flow should be used for DirectGrantFlow
	DirectGrantFlow *string `json:"directGrantFlow,omitempty" tf:"direct_grant_flow,omitempty"`

	// The alias of the flow to assign to the realm DockerAuthenticationFlow.
	// Which flow should be used for DockerAuthenticationFlow
	DockerAuthenticationFlow *string `json:"dockerAuthenticationFlow,omitempty" tf:"docker_authentication_flow,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The realm the authentication flow binding exists in.
	RealmID *string `json:"realmId,omitempty" tf:"realm_id,omitempty"`

	// The alias of the flow to assign to the realm RegistrationFlow.
	// Which flow should be used for RegistrationFlow
	RegistrationFlow *string `json:"registrationFlow,omitempty" tf:"registration_flow,omitempty"`

	// The alias of the flow to assign to the realm ResetCredentialsFlow.
	// Which flow should be used for ResetCredentialsFlow
	ResetCredentialsFlow *string `json:"resetCredentialsFlow,omitempty" tf:"reset_credentials_flow,omitempty"`
}

type BindingsParameters struct {

	// The alias of the flow to assign to the realm BrowserFlow.
	// Which flow should be used for BrowserFlow
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-keycloak/apis/authenticationflow/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-keycloak/config/common.AuthenticationFlowAliasExtractor()
	// +crossplane:generate:reference:refFieldName=BrowserFlowRef
	// +crossplane:generate:reference:selectorFieldName=BrowserFlowSelector
	// +kubebuilder:validation:Optional
	BrowserFlow *string `json:"browserFlow,omitempty" tf:"browser_flow,omitempty"`

	// Reference to a Flow in authenticationflow to populate browserFlow.
	// +kubebuilder:validation:Optional
	BrowserFlowRef *v1.Reference `json:"browserFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authenticationflow to populate browserFlow.
	// +kubebuilder:validation:Optional
	BrowserFlowSelector *v1.Selector `json:"browserFlowSelector,omitempty" tf:"-"`

	// The alias of the flow to assign to the realm ClientAuthenticationFlow.
	// Which flow should be used for ClientAuthenticationFlow
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-keycloak/apis/authenticationflow/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-keycloak/config/common.AuthenticationFlowAliasExtractor()
	// +crossplane:generate:reference:refFieldName=ClientAuthenticationFlowRef
	// +crossplane:generate:reference:selectorFieldName=ClientAuthenticationFlowSelector
	// +kubebuilder:validation:Optional
	ClientAuthenticationFlow *string `json:"clientAuthenticationFlow,omitempty" tf:"client_authentication_flow,omitempty"`

	// Reference to a Flow in authenticationflow to populate clientAuthenticationFlow.
	// +kubebuilder:validation:Optional
	ClientAuthenticationFlowRef *v1.Reference `json:"clientAuthenticationFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authenticationflow to populate clientAuthenticationFlow.
	// +kubebuilder:validation:Optional
	ClientAuthenticationFlowSelector *v1.Selector `json:"clientAuthenticationFlowSelector,omitempty" tf:"-"`

	// The alias of the flow to assign to the realm DirectGrantFlow.
	// Which flow should be used for DirectGrantFlow
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-keycloak/apis/authenticationflow/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-keycloak/config/common.AuthenticationFlowAliasExtractor()
	// +crossplane:generate:reference:refFieldName=DirectGrantFlowRef
	// +crossplane:generate:reference:selectorFieldName=DirectGrantFlowSelector
	// +kubebuilder:validation:Optional
	DirectGrantFlow *string `json:"directGrantFlow,omitempty" tf:"direct_grant_flow,omitempty"`

	// Reference to a Flow in authenticationflow to populate directGrantFlow.
	// +kubebuilder:validation:Optional
	DirectGrantFlowRef *v1.Reference `json:"directGrantFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authenticationflow to populate directGrantFlow.
	// +kubebuilder:validation:Optional
	DirectGrantFlowSelector *v1.Selector `json:"directGrantFlowSelector,omitempty" tf:"-"`

	// The alias of the flow to assign to the realm DockerAuthenticationFlow.
	// Which flow should be used for DockerAuthenticationFlow
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-keycloak/apis/authenticationflow/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-keycloak/config/common.AuthenticationFlowAliasExtractor()
	// +crossplane:generate:reference:refFieldName=DockerAuthenticationFlowRef
	// +crossplane:generate:reference:selectorFieldName=DockerAuthenticationFlowSelector
	// +kubebuilder:validation:Optional
	DockerAuthenticationFlow *string `json:"dockerAuthenticationFlow,omitempty" tf:"docker_authentication_flow,omitempty"`

	// Reference to a Flow in authenticationflow to populate dockerAuthenticationFlow.
	// +kubebuilder:validation:Optional
	DockerAuthenticationFlowRef *v1.Reference `json:"dockerAuthenticationFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authenticationflow to populate dockerAuthenticationFlow.
	// +kubebuilder:validation:Optional
	DockerAuthenticationFlowSelector *v1.Selector `json:"dockerAuthenticationFlowSelector,omitempty" tf:"-"`

	// The realm the authentication flow binding exists in.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-keycloak/apis/realm/v1alpha1.Realm
	// +kubebuilder:validation:Optional
	RealmID *string `json:"realmId,omitempty" tf:"realm_id,omitempty"`

	// Reference to a Realm in realm to populate realmId.
	// +kubebuilder:validation:Optional
	RealmIDRef *v1.Reference `json:"realmIdRef,omitempty" tf:"-"`

	// Selector for a Realm in realm to populate realmId.
	// +kubebuilder:validation:Optional
	RealmIDSelector *v1.Selector `json:"realmIdSelector,omitempty" tf:"-"`

	// The alias of the flow to assign to the realm RegistrationFlow.
	// Which flow should be used for RegistrationFlow
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-keycloak/apis/authenticationflow/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-keycloak/config/common.AuthenticationFlowAliasExtractor()
	// +crossplane:generate:reference:refFieldName=RegistrationFlowRef
	// +crossplane:generate:reference:selectorFieldName=RegistrationFlowSelector
	// +kubebuilder:validation:Optional
	RegistrationFlow *string `json:"registrationFlow,omitempty" tf:"registration_flow,omitempty"`

	// Reference to a Flow in authenticationflow to populate registrationFlow.
	// +kubebuilder:validation:Optional
	RegistrationFlowRef *v1.Reference `json:"registrationFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authenticationflow to populate registrationFlow.
	// +kubebuilder:validation:Optional
	RegistrationFlowSelector *v1.Selector `json:"registrationFlowSelector,omitempty" tf:"-"`

	// The alias of the flow to assign to the realm ResetCredentialsFlow.
	// Which flow should be used for ResetCredentialsFlow
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-keycloak/apis/authenticationflow/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-keycloak/config/common.AuthenticationFlowAliasExtractor()
	// +crossplane:generate:reference:refFieldName=ResetCredentialsFlowRef
	// +crossplane:generate:reference:selectorFieldName=ResetCredentialsFlowSelector
	// +kubebuilder:validation:Optional
	ResetCredentialsFlow *string `json:"resetCredentialsFlow,omitempty" tf:"reset_credentials_flow,omitempty"`

	// Reference to a Flow in authenticationflow to populate resetCredentialsFlow.
	// +kubebuilder:validation:Optional
	ResetCredentialsFlowRef *v1.Reference `json:"resetCredentialsFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authenticationflow to populate resetCredentialsFlow.
	// +kubebuilder:validation:Optional
	ResetCredentialsFlowSelector *v1.Selector `json:"resetCredentialsFlowSelector,omitempty" tf:"-"`
}

// BindingsSpec defines the desired state of Bindings
type BindingsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BindingsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BindingsInitParameters `json:"initProvider,omitempty"`
}

// BindingsStatus defines the observed state of Bindings.
type BindingsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BindingsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Bindings is the Schema for the Bindingss API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,keycloak}
type Bindings struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BindingsSpec   `json:"spec"`
	Status            BindingsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BindingsList contains a list of Bindingss
type BindingsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Bindings `json:"items"`
}

// Repository type metadata.
var (
	Bindings_Kind             = "Bindings"
	Bindings_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Bindings_Kind}.String()
	Bindings_KindAPIVersion   = Bindings_Kind + "." + CRDGroupVersion.String()
	Bindings_GroupVersionKind = CRDGroupVersion.WithKind(Bindings_Kind)
)

func init() {
	SchemeBuilder.Register(&Bindings{}, &BindingsList{})
}
