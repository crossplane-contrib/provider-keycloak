apiVersion: openidclient.keycloak.m.crossplane.io/v1alpha1
kind: ClientClientPolicy
metadata:
  annotations:
    meta.upbound.io/example-id: openidclient/v1alpha1/clientclientpolicy
  labels:
    testing.upbound.io/example-name: token_exchange
  name: token-exchange
  namespace: upbound-system
spec:
  forProvider:
    clientsRefs:
    - name: openid_client
    decisionStrategy: UNANIMOUS
    logic: POSITIVE
    name: my-policy
    realmIdSelector:
      matchLabels:
        testing.upbound.io/example-name: realm
    resourceServerIdSelector:
      matchLabels:
        testing.upbound.io/example-name: keycloak_openid_client

---

apiVersion: openidclient.keycloak.m.crossplane.io/v1alpha1
kind: Client
metadata:
  annotations:
    meta.upbound.io/example-id: openidclient/v1alpha1/clientclientpolicy
  labels:
    testing.upbound.io/example-name: openid_client
  name: openid-client
  namespace: upbound-system
spec:
  forProvider:
    accessType: CONFIDENTIAL
    clientId: openid_client
    name: openid_client
    realmIdSelector:
      matchLabels:
        testing.upbound.io/example-name: realm
    serviceAccountsEnabled: true

---

apiVersion: openidclient.keycloak.m.crossplane.io/v1alpha1
kind: ClientPermissions
metadata:
  annotations:
    meta.upbound.io/example-id: openidclient/v1alpha1/clientclientpolicy
  labels:
    testing.upbound.io/example-name: my_permission
  name: my-permission
  namespace: upbound-system
spec:
  forProvider:
    clientIdSelector:
      matchLabels:
        testing.upbound.io/example-name: openid_client
    realmIdSelector:
      matchLabels:
        testing.upbound.io/example-name: realm

---

apiVersion: realm.keycloak.m.crossplane.io/v1alpha1
kind: Realm
metadata:
  annotations:
    meta.upbound.io/example-id: openidclient/v1alpha1/clientclientpolicy
  labels:
    testing.upbound.io/example-name: realm
  name: realm
  namespace: upbound-system
spec:
  forProvider:
    enabled: true
    realm: my-realm
