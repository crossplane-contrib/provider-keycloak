apiVersion: ldap.keycloak.crossplane.io/v1alpha1
kind: RoleMapper
metadata:
  annotations:
    meta.upbound.io/example-id: ldap/v1alpha1/rolemapper
  labels:
    testing.upbound.io/example-name: ldap_role_mapper
  name: ldap-role-mapper
spec:
  forProvider:
    ldapRolesDn: dc=example,dc=org
    ldapUserFederationIdSelector:
      matchLabels:
        testing.upbound.io/example-name: ldap_user_federation
    memberofLdapAttribute: memberOf
    membershipAttributeType: DN
    membershipLdapAttribute: member
    membershipUserLdapAttribute: cn
    name: role-mapper
    realmIdSelector:
      matchLabels:
        testing.upbound.io/example-name: realm
    roleNameLdapAttribute: cn
    roleObjectClasses:
    - groupOfNames
    userRolesRetrieveStrategy: GET_ROLES_FROM_USER_MEMBEROF_ATTRIBUTE

---

apiVersion: ldap.keycloak.crossplane.io/v1alpha1
kind: UserFederation
metadata:
  annotations:
    meta.upbound.io/example-id: ldap/v1alpha1/rolemapper
  labels:
    testing.upbound.io/example-name: ldap_user_federation
  name: ldap-user-federation
spec:
  forProvider:
    bindCredentialSecretRef:
      key: example-key
      name: example-secret
      namespace: upbound-system
    bindDn: cn=admin,dc=example,dc=org
    connectionUrl: ldap://openldap
    name: openldap
    rdnLdapAttribute: cn
    realmIdSelector:
      matchLabels:
        testing.upbound.io/example-name: realm
    userObjectClasses:
    - simpleSecurityObject
    - organizationalRole
    usernameLdapAttribute: cn
    usersDn: dc=example,dc=org
    uuidLdapAttribute: entryDN

---

apiVersion: realm.keycloak.crossplane.io/v1alpha1
kind: Realm
metadata:
  annotations:
    meta.upbound.io/example-id: ldap/v1alpha1/rolemapper
  labels:
    testing.upbound.io/example-name: realm
  name: realm
spec:
  forProvider:
    enabled: true
    realm: my-realm
