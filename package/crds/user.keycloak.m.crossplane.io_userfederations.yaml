---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  name: userfederations.user.keycloak.m.crossplane.io
spec:
  group: user.keycloak.m.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - keycloak
    kind: UserFederation
    listKind: UserFederationList
    plural: userfederations
    singular: userfederation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: UserFederation is the Schema for the UserFederations API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: UserFederationSpec defines the desired state of UserFederation
            properties:
              forProvider:
                properties:
                  cachePolicy:
                    description: Can be one of DEFAULT, EVICT_DAILY, EVICT_WEEKLY,
                      MAX_LIFESPAN, or NO_CACHE. Defaults to DEFAULT.
                    type: string
                  changedSyncPeriod:
                    description: |-
                      How frequently Keycloak should sync changed users, in seconds. Omit this property to disable periodic changed users sync.
                      How frequently Keycloak should sync changed users, in seconds. Omit this property to disable periodic changed users sync.
                    type: number
                  config:
                    additionalProperties:
                      type: string
                    description: 'The provider configuration handed over to your custom
                      user federation provider. In order to add multivalued settings,
                      use ## to separate the values.'
                    type: object
                    x-kubernetes-map-type: granular
                  enabled:
                    description: |-
                      When false, this provider will not be used when performing queries for users. Defaults to true.
                      When false, this provider will not be used when performing queries for users.
                    type: boolean
                  fullSyncPeriod:
                    description: |-
                      How frequently Keycloak should sync all users, in seconds. Omit this property to disable periodic full sync.
                      How frequently Keycloak should sync all users, in seconds. Omit this property to disable periodic full sync.
                    type: number
                  name:
                    description: |-
                      Display name of the provider when displayed in the console.
                      Display name of the provider when displayed in the console.
                    type: string
                  parentId:
                    description: |-
                      Must be set to the realms' internal_id  when it differs from the realm. This can happen when existing resources are imported into the state.
                      The parent_id of the generated component. will use realm_id if not specified.
                    type: string
                  priority:
                    description: |-
                      Priority of this provider when looking up users. Lower values are first. Defaults to 0.
                      Priority of this provider when looking up users. Lower values are first.
                    type: number
                  providerId:
                    description: |-
                      The unique ID of the custom provider, specified in the getId implementation for the UserStorageProviderFactory interface.
                      The unique ID of the custom provider, specified in the `getId` implementation for the UserStorageProviderFactory interface
                    type: string
                  realmId:
                    description: |-
                      The realm that this provider will provide user federation for.
                      The realm (name) this provider will provide user federation for.
                    type: string
                  realmIdRef:
                    description: Reference to a Realm in realm to populate realmId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  realmIdSelector:
                    description: Selector for a Realm in realm to populate realmId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  cachePolicy:
                    description: Can be one of DEFAULT, EVICT_DAILY, EVICT_WEEKLY,
                      MAX_LIFESPAN, or NO_CACHE. Defaults to DEFAULT.
                    type: string
                  changedSyncPeriod:
                    description: |-
                      How frequently Keycloak should sync changed users, in seconds. Omit this property to disable periodic changed users sync.
                      How frequently Keycloak should sync changed users, in seconds. Omit this property to disable periodic changed users sync.
                    type: number
                  config:
                    additionalProperties:
                      type: string
                    description: 'The provider configuration handed over to your custom
                      user federation provider. In order to add multivalued settings,
                      use ## to separate the values.'
                    type: object
                    x-kubernetes-map-type: granular
                  enabled:
                    description: |-
                      When false, this provider will not be used when performing queries for users. Defaults to true.
                      When false, this provider will not be used when performing queries for users.
                    type: boolean
                  fullSyncPeriod:
                    description: |-
                      How frequently Keycloak should sync all users, in seconds. Omit this property to disable periodic full sync.
                      How frequently Keycloak should sync all users, in seconds. Omit this property to disable periodic full sync.
                    type: number
                  name:
                    description: |-
                      Display name of the provider when displayed in the console.
                      Display name of the provider when displayed in the console.
                    type: string
                  parentId:
                    description: |-
                      Must be set to the realms' internal_id  when it differs from the realm. This can happen when existing resources are imported into the state.
                      The parent_id of the generated component. will use realm_id if not specified.
                    type: string
                  priority:
                    description: |-
                      Priority of this provider when looking up users. Lower values are first. Defaults to 0.
                      Priority of this provider when looking up users. Lower values are first.
                    type: number
                  providerId:
                    description: |-
                      The unique ID of the custom provider, specified in the getId implementation for the UserStorageProviderFactory interface.
                      The unique ID of the custom provider, specified in the `getId` implementation for the UserStorageProviderFactory interface
                    type: string
                  realmId:
                    description: |-
                      The realm that this provider will provide user federation for.
                      The realm (name) this provider will provide user federation for.
                    type: string
                  realmIdRef:
                    description: Reference to a Realm in realm to populate realmId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  realmIdSelector:
                    description: Selector for a Realm in realm to populate realmId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  kind: ClusterProviderConfig
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  kind:
                    description: Kind of the referenced object.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - kind
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                required:
                - name
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.providerId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.providerId)
                || (has(self.initProvider) && has(self.initProvider.providerId))'
          status:
            description: UserFederationStatus defines the observed state of UserFederation.
            properties:
              atProvider:
                properties:
                  cachePolicy:
                    description: Can be one of DEFAULT, EVICT_DAILY, EVICT_WEEKLY,
                      MAX_LIFESPAN, or NO_CACHE. Defaults to DEFAULT.
                    type: string
                  changedSyncPeriod:
                    description: |-
                      How frequently Keycloak should sync changed users, in seconds. Omit this property to disable periodic changed users sync.
                      How frequently Keycloak should sync changed users, in seconds. Omit this property to disable periodic changed users sync.
                    type: number
                  config:
                    additionalProperties:
                      type: string
                    description: 'The provider configuration handed over to your custom
                      user federation provider. In order to add multivalued settings,
                      use ## to separate the values.'
                    type: object
                    x-kubernetes-map-type: granular
                  enabled:
                    description: |-
                      When false, this provider will not be used when performing queries for users. Defaults to true.
                      When false, this provider will not be used when performing queries for users.
                    type: boolean
                  fullSyncPeriod:
                    description: |-
                      How frequently Keycloak should sync all users, in seconds. Omit this property to disable periodic full sync.
                      How frequently Keycloak should sync all users, in seconds. Omit this property to disable periodic full sync.
                    type: number
                  id:
                    type: string
                  name:
                    description: |-
                      Display name of the provider when displayed in the console.
                      Display name of the provider when displayed in the console.
                    type: string
                  parentId:
                    description: |-
                      Must be set to the realms' internal_id  when it differs from the realm. This can happen when existing resources are imported into the state.
                      The parent_id of the generated component. will use realm_id if not specified.
                    type: string
                  priority:
                    description: |-
                      Priority of this provider when looking up users. Lower values are first. Defaults to 0.
                      Priority of this provider when looking up users. Lower values are first.
                    type: number
                  providerId:
                    description: |-
                      The unique ID of the custom provider, specified in the getId implementation for the UserStorageProviderFactory interface.
                      The unique ID of the custom provider, specified in the `getId` implementation for the UserStorageProviderFactory interface
                    type: string
                  realmId:
                    description: |-
                      The realm that this provider will provide user federation for.
                      The realm (name) this provider will provide user federation for.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
