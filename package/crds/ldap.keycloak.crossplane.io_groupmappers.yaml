---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: groupmappers.ldap.keycloak.crossplane.io
spec:
  group: ldap.keycloak.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - keycloak
    kind: GroupMapper
    listKind: GroupMapperList
    plural: groupmappers
    singular: groupmapper
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GroupMapper is the Schema for the GroupMappers API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GroupMapperSpec defines the desired state of GroupMapper
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  dropNonExistingGroupsDuringSync:
                    description: When true, groups that no longer exist within LDAP
                      will be dropped in Keycloak during sync. Defaults to false.
                    type: boolean
                  groupNameLdapAttribute:
                    description: The name of the LDAP attribute that is used in group
                      objects for the name and RDN of the group. Typically cn.
                    type: string
                  groupObjectClasses:
                    description: List of strings representing the object classes for
                      the group. Must contain at least one.
                    items:
                      type: string
                    type: array
                  groupsLdapFilter:
                    description: When specified, adds a custom filter to be used when
                      querying for groups. Must start with ( and end with ).
                    type: string
                  groupsPath:
                    description: Keycloak group path the LDAP groups are added to.
                      For example if value /Applications/App1 is used, then LDAP groups
                      will be available in Keycloak under group App1, which is the
                      child of top level group Applications. The configured group
                      path must already exist in Keycloak when creating this mapper.
                    type: string
                  ignoreMissingGroups:
                    description: When true, missing groups in the hierarchy will be
                      ignored.
                    type: boolean
                  ldapGroupsDn:
                    description: The LDAP DN where groups can be found.
                    type: string
                  ldapUserFederationId:
                    description: |-
                      The ID of the LDAP user federation provider to attach this mapper to.
                      The ldap user federation provider to attach this mapper to.
                    type: string
                  ldapUserFederationIdRef:
                    description: Reference to a UserFederation in ldap to populate
                      ldapUserFederationId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  ldapUserFederationIdSelector:
                    description: Selector for a UserFederation in ldap to populate
                      ldapUserFederationId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  mappedGroupAttributes:
                    description: Array of strings representing attributes on the LDAP
                      group which will be mapped to attributes on the Keycloak group.
                    items:
                      type: string
                    type: array
                  memberofLdapAttribute:
                    description: Specifies the name of the LDAP attribute on the LDAP
                      user that contains the groups the user is a member of. Defaults
                      to memberOf.
                    type: string
                  membershipAttributeType:
                    description: Can be one of DN or UID. Defaults to DN.
                    type: string
                  membershipLdapAttribute:
                    description: The name of the LDAP attribute that is used for membership
                      mappings.
                    type: string
                  membershipUserLdapAttribute:
                    description: The name of the LDAP attribute on a user that is
                      used for membership mappings.
                    type: string
                  mode:
                    description: Can be one of READ_ONLY, LDAP_ONLY or IMPORT. Defaults
                      to READ_ONLY.
                    type: string
                  name:
                    description: |-
                      Display name of this mapper when displayed in the console.
                      Display name of the mapper when displayed in the console.
                    type: string
                  preserveGroupInheritance:
                    description: When true, group inheritance will be propagated from
                      LDAP to Keycloak. When false, all LDAP groups will be propagated
                      as top level groups within Keycloak.
                    type: boolean
                  realmId:
                    description: |-
                      The realm that this LDAP mapper will exist in.
                      The realm in which the ldap user federation provider exists.
                    type: string
                  realmIdRef:
                    description: Reference to a Realm in realm to populate realmId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  realmIdSelector:
                    description: Selector for a Realm in realm to populate realmId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  userRolesRetrieveStrategy:
                    description: Can be one of LOAD_GROUPS_BY_MEMBER_ATTRIBUTE, GET_GROUPS_FROM_USER_MEMBEROF_ATTRIBUTE,
                      or LOAD_GROUPS_BY_MEMBER_ATTRIBUTE_RECURSIVELY. Defaults to
                      LOAD_GROUPS_BY_MEMBER_ATTRIBUTE.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  dropNonExistingGroupsDuringSync:
                    description: When true, groups that no longer exist within LDAP
                      will be dropped in Keycloak during sync. Defaults to false.
                    type: boolean
                  groupNameLdapAttribute:
                    description: The name of the LDAP attribute that is used in group
                      objects for the name and RDN of the group. Typically cn.
                    type: string
                  groupObjectClasses:
                    description: List of strings representing the object classes for
                      the group. Must contain at least one.
                    items:
                      type: string
                    type: array
                  groupsLdapFilter:
                    description: When specified, adds a custom filter to be used when
                      querying for groups. Must start with ( and end with ).
                    type: string
                  groupsPath:
                    description: Keycloak group path the LDAP groups are added to.
                      For example if value /Applications/App1 is used, then LDAP groups
                      will be available in Keycloak under group App1, which is the
                      child of top level group Applications. The configured group
                      path must already exist in Keycloak when creating this mapper.
                    type: string
                  ignoreMissingGroups:
                    description: When true, missing groups in the hierarchy will be
                      ignored.
                    type: boolean
                  ldapGroupsDn:
                    description: The LDAP DN where groups can be found.
                    type: string
                  ldapUserFederationId:
                    description: |-
                      The ID of the LDAP user federation provider to attach this mapper to.
                      The ldap user federation provider to attach this mapper to.
                    type: string
                  ldapUserFederationIdRef:
                    description: Reference to a UserFederation in ldap to populate
                      ldapUserFederationId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  ldapUserFederationIdSelector:
                    description: Selector for a UserFederation in ldap to populate
                      ldapUserFederationId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  mappedGroupAttributes:
                    description: Array of strings representing attributes on the LDAP
                      group which will be mapped to attributes on the Keycloak group.
                    items:
                      type: string
                    type: array
                  memberofLdapAttribute:
                    description: Specifies the name of the LDAP attribute on the LDAP
                      user that contains the groups the user is a member of. Defaults
                      to memberOf.
                    type: string
                  membershipAttributeType:
                    description: Can be one of DN or UID. Defaults to DN.
                    type: string
                  membershipLdapAttribute:
                    description: The name of the LDAP attribute that is used for membership
                      mappings.
                    type: string
                  membershipUserLdapAttribute:
                    description: The name of the LDAP attribute on a user that is
                      used for membership mappings.
                    type: string
                  mode:
                    description: Can be one of READ_ONLY, LDAP_ONLY or IMPORT. Defaults
                      to READ_ONLY.
                    type: string
                  name:
                    description: |-
                      Display name of this mapper when displayed in the console.
                      Display name of the mapper when displayed in the console.
                    type: string
                  preserveGroupInheritance:
                    description: When true, group inheritance will be propagated from
                      LDAP to Keycloak. When false, all LDAP groups will be propagated
                      as top level groups within Keycloak.
                    type: boolean
                  realmId:
                    description: |-
                      The realm that this LDAP mapper will exist in.
                      The realm in which the ldap user federation provider exists.
                    type: string
                  realmIdRef:
                    description: Reference to a Realm in realm to populate realmId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  realmIdSelector:
                    description: Selector for a Realm in realm to populate realmId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  userRolesRetrieveStrategy:
                    description: Can be one of LOAD_GROUPS_BY_MEMBER_ATTRIBUTE, GET_GROUPS_FROM_USER_MEMBEROF_ATTRIBUTE,
                      or LOAD_GROUPS_BY_MEMBER_ATTRIBUTE_RECURSIVELY. Defaults to
                      LOAD_GROUPS_BY_MEMBER_ATTRIBUTE.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.groupNameLdapAttribute is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.groupNameLdapAttribute)
                || (has(self.initProvider) && has(self.initProvider.groupNameLdapAttribute))'
            - message: spec.forProvider.groupObjectClasses is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.groupObjectClasses)
                || (has(self.initProvider) && has(self.initProvider.groupObjectClasses))'
            - message: spec.forProvider.ldapGroupsDn is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.ldapGroupsDn)
                || (has(self.initProvider) && has(self.initProvider.ldapGroupsDn))'
            - message: spec.forProvider.membershipLdapAttribute is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.membershipLdapAttribute)
                || (has(self.initProvider) && has(self.initProvider.membershipLdapAttribute))'
            - message: spec.forProvider.membershipUserLdapAttribute is a required
                parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.membershipUserLdapAttribute)
                || (has(self.initProvider) && has(self.initProvider.membershipUserLdapAttribute))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: GroupMapperStatus defines the observed state of GroupMapper.
            properties:
              atProvider:
                properties:
                  dropNonExistingGroupsDuringSync:
                    description: When true, groups that no longer exist within LDAP
                      will be dropped in Keycloak during sync. Defaults to false.
                    type: boolean
                  groupNameLdapAttribute:
                    description: The name of the LDAP attribute that is used in group
                      objects for the name and RDN of the group. Typically cn.
                    type: string
                  groupObjectClasses:
                    description: List of strings representing the object classes for
                      the group. Must contain at least one.
                    items:
                      type: string
                    type: array
                  groupsLdapFilter:
                    description: When specified, adds a custom filter to be used when
                      querying for groups. Must start with ( and end with ).
                    type: string
                  groupsPath:
                    description: Keycloak group path the LDAP groups are added to.
                      For example if value /Applications/App1 is used, then LDAP groups
                      will be available in Keycloak under group App1, which is the
                      child of top level group Applications. The configured group
                      path must already exist in Keycloak when creating this mapper.
                    type: string
                  id:
                    type: string
                  ignoreMissingGroups:
                    description: When true, missing groups in the hierarchy will be
                      ignored.
                    type: boolean
                  ldapGroupsDn:
                    description: The LDAP DN where groups can be found.
                    type: string
                  ldapUserFederationId:
                    description: |-
                      The ID of the LDAP user federation provider to attach this mapper to.
                      The ldap user federation provider to attach this mapper to.
                    type: string
                  mappedGroupAttributes:
                    description: Array of strings representing attributes on the LDAP
                      group which will be mapped to attributes on the Keycloak group.
                    items:
                      type: string
                    type: array
                  memberofLdapAttribute:
                    description: Specifies the name of the LDAP attribute on the LDAP
                      user that contains the groups the user is a member of. Defaults
                      to memberOf.
                    type: string
                  membershipAttributeType:
                    description: Can be one of DN or UID. Defaults to DN.
                    type: string
                  membershipLdapAttribute:
                    description: The name of the LDAP attribute that is used for membership
                      mappings.
                    type: string
                  membershipUserLdapAttribute:
                    description: The name of the LDAP attribute on a user that is
                      used for membership mappings.
                    type: string
                  mode:
                    description: Can be one of READ_ONLY, LDAP_ONLY or IMPORT. Defaults
                      to READ_ONLY.
                    type: string
                  name:
                    description: |-
                      Display name of this mapper when displayed in the console.
                      Display name of the mapper when displayed in the console.
                    type: string
                  preserveGroupInheritance:
                    description: When true, group inheritance will be propagated from
                      LDAP to Keycloak. When false, all LDAP groups will be propagated
                      as top level groups within Keycloak.
                    type: boolean
                  realmId:
                    description: |-
                      The realm that this LDAP mapper will exist in.
                      The realm in which the ldap user federation provider exists.
                    type: string
                  userRolesRetrieveStrategy:
                    description: Can be one of LOAD_GROUPS_BY_MEMBER_ATTRIBUTE, GET_GROUPS_FROM_USER_MEMBEROF_ATTRIBUTE,
                      or LOAD_GROUPS_BY_MEMBER_ATTRIBUTE_RECURSIVELY. Defaults to
                      LOAD_GROUPS_BY_MEMBER_ATTRIBUTE.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
