---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  name: userfederations.ldap.keycloak.crossplane.io
spec:
  group: ldap.keycloak.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - keycloak
    kind: UserFederation
    listKind: UserFederationList
    plural: userfederations
    singular: userfederation
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: UserFederation is the Schema for the UserFederations API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: UserFederationSpec defines the desired state of UserFederation
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  batchSizeForSync:
                    description: |-
                      The number of users to sync within a single transaction. Defaults to 1000.
                      The number of users to sync within a single transaction.
                    type: number
                  bindCredentialSecretRef:
                    description: |-
                      Password of LDAP admin. This attribute must be set if bind_dn is set.
                      Password of LDAP admin.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  bindDn:
                    description: |-
                      DN of LDAP admin, which will be used by Keycloak to access LDAP server. This attribute must be set if bind_credential is set.
                      DN of LDAP admin, which will be used by Keycloak to access LDAP server.
                    type: string
                  cache:
                    description: |-
                      A block containing the cache settings.
                      Settings regarding cache policy for this realm.
                    items:
                      properties:
                        evictionDay:
                          description: |-
                            Day of the week the entry will become invalid on
                            Day of the week the entry will become invalid on.
                          type: number
                        evictionHour:
                          description: |-
                            Hour of day the entry will become invalid on.
                            Hour of day the entry will become invalid on.
                          type: number
                        evictionMinute:
                          description: |-
                            Minute of day the entry will become invalid on.
                            Minute of day the entry will become invalid on.
                          type: number
                        maxLifespan:
                          description: |-
                            Max lifespan of cache entry (duration string).
                            Max lifespan of cache entry (duration string).
                          type: string
                        policy:
                          description: Can be one of DEFAULT, EVICT_DAILY, EVICT_WEEKLY,
                            MAX_LIFESPAN, or NO_CACHE. Defaults to DEFAULT.
                          type: string
                      type: object
                    type: array
                  changedSyncPeriod:
                    description: |-
                      How frequently Keycloak should sync changed LDAP users, in seconds. Omit this property to disable periodic changed users sync.
                      How frequently Keycloak should sync changed LDAP users, in seconds. Omit this property to disable periodic changed users sync.
                    type: number
                  connectionTimeout:
                    description: |-
                      LDAP connection timeout in the format of a Go duration string.
                      LDAP connection timeout (duration string)
                    type: string
                  connectionUrl:
                    description: |-
                      Connection URL to the LDAP server.
                      Connection URL to the LDAP server.
                    type: string
                  customUserSearchFilter:
                    description: |-
                      Additional LDAP filter for filtering searched users. Must begin with ( and end with ).
                      Additional LDAP filter for filtering searched users. Must begin with '(' and end with ')'.
                    type: string
                  deleteDefaultMappers:
                    description: |-
                      When true, the provider will delete the default mappers which are normally created by Keycloak when creating an LDAP user federation provider. Defaults to false.
                      When true, the provider will delete the default mappers which are normally created by Keycloak when creating an LDAP user federation provider.
                    type: boolean
                  editMode:
                    description: |-
                      Can be one of READ_ONLY, WRITABLE, or UNSYNCED. UNSYNCED allows user data to be imported but not synced back to LDAP. Defaults to READ_ONLY.
                      READ_ONLY and WRITABLE are self-explanatory. UNSYNCED allows user data to be imported but not synced back to LDAP.
                    type: string
                  enabled:
                    description: |-
                      When false, this provider will not be used when performing queries for users. Defaults to true.
                      When false, this provider will not be used when performing queries for users.
                    type: boolean
                  fullSyncPeriod:
                    description: |-
                      How frequently Keycloak should sync all LDAP users, in seconds. Omit this property to disable periodic full sync.
                      How frequently Keycloak should sync all LDAP users, in seconds. Omit this property to disable periodic full sync.
                    type: number
                  importEnabled:
                    description: |-
                      When true, LDAP users will be imported into the Keycloak database. Defaults to true.
                      When true, LDAP users will be imported into the Keycloak database.
                    type: boolean
                  kerberos:
                    description: |-
                      A block containing the kerberos settings.
                      Settings regarding kerberos authentication for this realm.
                    items:
                      properties:
                        kerberosRealm:
                          description: |-
                            The name of the kerberos realm, e.g. FOO.LOCAL.
                            The name of the kerberos realm, e.g. FOO.LOCAL
                          type: string
                        keyTab:
                          description: |-
                            Path to the kerberos keytab file on the server with credentials of the service principal.
                            Path to the kerberos keytab file on the server with credentials of the service principal.
                          type: string
                        serverPrincipal:
                          description: |-
                            The kerberos server principal, e.g. 'HTTP/host.foo.com@FOO.LOCAL'.
                            The kerberos server principal, e.g. 'HTTP/host.foo.com@FOO.LOCAL'.
                          type: string
                        useKerberosForPasswordAuthentication:
                          description: |-
                            Use kerberos login module instead of ldap service api. Defaults to false.
                            Use kerberos login module instead of ldap service api. Defaults to `false`.
                          type: boolean
                      type: object
                    type: array
                  name:
                    description: |-
                      Display name of the provider when displayed in the console.
                      Display name of the provider when displayed in the console.
                    type: string
                  pagination:
                    description: |-
                      When true, Keycloak assumes the LDAP server supports pagination. Defaults to true.
                      When true, Keycloak assumes the LDAP server supports pagination.
                    type: boolean
                  priority:
                    description: |-
                      Priority of this provider when looking up users. Lower values are first. Defaults to 0.
                      Priority of this provider when looking up users. Lower values are first.
                    type: number
                  rdnLdapAttribute:
                    description: |-
                      Name of the LDAP attribute to use as the relative distinguished name.
                      Name of the LDAP attribute to use as the relative distinguished name.
                    type: string
                  readTimeout:
                    description: |-
                      LDAP read timeout in the format of a Go duration string.
                      LDAP read timeout (duration string)
                    type: string
                  realmId:
                    description: |-
                      The realm that this provider will provide user federation for.
                      The realm this provider will provide user federation for.
                    type: string
                  realmIdRef:
                    description: Reference to a Realm in realm to populate realmId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  realmIdSelector:
                    description: Selector for a Realm in realm to populate realmId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  searchScope:
                    description: |-
                      Can be one of ONE_LEVEL or SUBTREE:
                      ONE_LEVEL: only search for users in the DN specified by user_dn. SUBTREE: search entire LDAP subtree.
                    type: string
                  startTls:
                    description: |-
                      When true, Keycloak will encrypt the connection to LDAP using STARTTLS, which will disable connection pooling.
                      When true, Keycloak will encrypt the connection to LDAP using STARTTLS, which will disable connection pooling.
                    type: boolean
                  syncRegistrations:
                    description: |-
                      When true, newly created users will be synced back to LDAP. Defaults to false.
                      When true, newly created users will be synced back to LDAP.
                    type: boolean
                  trustEmail:
                    description: |-
                      If enabled, email provided by this provider is not verified even if verification is enabled for the realm.
                      If enabled, email provided by this provider is not verified even if verification is enabled for the realm.
                    type: boolean
                  usePasswordModifyExtendedOp:
                    description: |-
                      When true, use the LDAPv3 Password Modify Extended Operation (RFC-3062).
                      When `true`, use the LDAPv3 Password Modify Extended Operation (RFC-3062).
                    type: boolean
                  useTruststoreSpi:
                    description: 'Can be one of ALWAYS, ONLY_FOR_LDAPS, or NEVER:'
                    type: string
                  userObjectClasses:
                    description: |-
                      Array of all values of LDAP objectClass attribute for users in LDAP. Must contain at least one.
                      All values of LDAP objectClass attribute for users in LDAP.
                    items:
                      type: string
                    type: array
                  usernameLdapAttribute:
                    description: |-
                      Name of the LDAP attribute to use as the Keycloak username.
                      Name of the LDAP attribute to use as the Keycloak username.
                    type: string
                  usersDn:
                    description: |-
                      Full DN of LDAP tree where your users are.
                      Full DN of LDAP tree where your users are.
                    type: string
                  uuidLdapAttribute:
                    description: |-
                      Name of the LDAP attribute to use as a unique object identifier for objects in LDAP.
                      Name of the LDAP attribute to use as a unique object identifier for objects in LDAP.
                    type: string
                  validatePasswordPolicy:
                    description: |-
                      When true, Keycloak will validate passwords using the realm policy before updating it.
                      When true, Keycloak will validate passwords using the realm policy before updating it.
                    type: boolean
                  vendor:
                    description: |-
                      Can be one of OTHER, EDIRECTORY, AD, RHDS, or TIVOLI. When this is selected in the GUI, it provides reasonable defaults for other fields. When used with the Keycloak API, this attribute does nothing, but is still required. Defaults to OTHER.
                      LDAP vendor. I am almost certain this field does nothing, but the UI indicates that it is required.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  batchSizeForSync:
                    description: |-
                      The number of users to sync within a single transaction. Defaults to 1000.
                      The number of users to sync within a single transaction.
                    type: number
                  bindCredentialSecretRef:
                    description: |-
                      Password of LDAP admin. This attribute must be set if bind_dn is set.
                      Password of LDAP admin.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  bindDn:
                    description: |-
                      DN of LDAP admin, which will be used by Keycloak to access LDAP server. This attribute must be set if bind_credential is set.
                      DN of LDAP admin, which will be used by Keycloak to access LDAP server.
                    type: string
                  cache:
                    description: |-
                      A block containing the cache settings.
                      Settings regarding cache policy for this realm.
                    items:
                      properties:
                        evictionDay:
                          description: |-
                            Day of the week the entry will become invalid on
                            Day of the week the entry will become invalid on.
                          type: number
                        evictionHour:
                          description: |-
                            Hour of day the entry will become invalid on.
                            Hour of day the entry will become invalid on.
                          type: number
                        evictionMinute:
                          description: |-
                            Minute of day the entry will become invalid on.
                            Minute of day the entry will become invalid on.
                          type: number
                        maxLifespan:
                          description: |-
                            Max lifespan of cache entry (duration string).
                            Max lifespan of cache entry (duration string).
                          type: string
                        policy:
                          description: Can be one of DEFAULT, EVICT_DAILY, EVICT_WEEKLY,
                            MAX_LIFESPAN, or NO_CACHE. Defaults to DEFAULT.
                          type: string
                      type: object
                    type: array
                  changedSyncPeriod:
                    description: |-
                      How frequently Keycloak should sync changed LDAP users, in seconds. Omit this property to disable periodic changed users sync.
                      How frequently Keycloak should sync changed LDAP users, in seconds. Omit this property to disable periodic changed users sync.
                    type: number
                  connectionTimeout:
                    description: |-
                      LDAP connection timeout in the format of a Go duration string.
                      LDAP connection timeout (duration string)
                    type: string
                  connectionUrl:
                    description: |-
                      Connection URL to the LDAP server.
                      Connection URL to the LDAP server.
                    type: string
                  customUserSearchFilter:
                    description: |-
                      Additional LDAP filter for filtering searched users. Must begin with ( and end with ).
                      Additional LDAP filter for filtering searched users. Must begin with '(' and end with ')'.
                    type: string
                  deleteDefaultMappers:
                    description: |-
                      When true, the provider will delete the default mappers which are normally created by Keycloak when creating an LDAP user federation provider. Defaults to false.
                      When true, the provider will delete the default mappers which are normally created by Keycloak when creating an LDAP user federation provider.
                    type: boolean
                  editMode:
                    description: |-
                      Can be one of READ_ONLY, WRITABLE, or UNSYNCED. UNSYNCED allows user data to be imported but not synced back to LDAP. Defaults to READ_ONLY.
                      READ_ONLY and WRITABLE are self-explanatory. UNSYNCED allows user data to be imported but not synced back to LDAP.
                    type: string
                  enabled:
                    description: |-
                      When false, this provider will not be used when performing queries for users. Defaults to true.
                      When false, this provider will not be used when performing queries for users.
                    type: boolean
                  fullSyncPeriod:
                    description: |-
                      How frequently Keycloak should sync all LDAP users, in seconds. Omit this property to disable periodic full sync.
                      How frequently Keycloak should sync all LDAP users, in seconds. Omit this property to disable periodic full sync.
                    type: number
                  importEnabled:
                    description: |-
                      When true, LDAP users will be imported into the Keycloak database. Defaults to true.
                      When true, LDAP users will be imported into the Keycloak database.
                    type: boolean
                  kerberos:
                    description: |-
                      A block containing the kerberos settings.
                      Settings regarding kerberos authentication for this realm.
                    items:
                      properties:
                        kerberosRealm:
                          description: |-
                            The name of the kerberos realm, e.g. FOO.LOCAL.
                            The name of the kerberos realm, e.g. FOO.LOCAL
                          type: string
                        keyTab:
                          description: |-
                            Path to the kerberos keytab file on the server with credentials of the service principal.
                            Path to the kerberos keytab file on the server with credentials of the service principal.
                          type: string
                        serverPrincipal:
                          description: |-
                            The kerberos server principal, e.g. 'HTTP/host.foo.com@FOO.LOCAL'.
                            The kerberos server principal, e.g. 'HTTP/host.foo.com@FOO.LOCAL'.
                          type: string
                        useKerberosForPasswordAuthentication:
                          description: |-
                            Use kerberos login module instead of ldap service api. Defaults to false.
                            Use kerberos login module instead of ldap service api. Defaults to `false`.
                          type: boolean
                      type: object
                    type: array
                  name:
                    description: |-
                      Display name of the provider when displayed in the console.
                      Display name of the provider when displayed in the console.
                    type: string
                  pagination:
                    description: |-
                      When true, Keycloak assumes the LDAP server supports pagination. Defaults to true.
                      When true, Keycloak assumes the LDAP server supports pagination.
                    type: boolean
                  priority:
                    description: |-
                      Priority of this provider when looking up users. Lower values are first. Defaults to 0.
                      Priority of this provider when looking up users. Lower values are first.
                    type: number
                  rdnLdapAttribute:
                    description: |-
                      Name of the LDAP attribute to use as the relative distinguished name.
                      Name of the LDAP attribute to use as the relative distinguished name.
                    type: string
                  readTimeout:
                    description: |-
                      LDAP read timeout in the format of a Go duration string.
                      LDAP read timeout (duration string)
                    type: string
                  realmId:
                    description: |-
                      The realm that this provider will provide user federation for.
                      The realm this provider will provide user federation for.
                    type: string
                  realmIdRef:
                    description: Reference to a Realm in realm to populate realmId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  realmIdSelector:
                    description: Selector for a Realm in realm to populate realmId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  searchScope:
                    description: |-
                      Can be one of ONE_LEVEL or SUBTREE:
                      ONE_LEVEL: only search for users in the DN specified by user_dn. SUBTREE: search entire LDAP subtree.
                    type: string
                  startTls:
                    description: |-
                      When true, Keycloak will encrypt the connection to LDAP using STARTTLS, which will disable connection pooling.
                      When true, Keycloak will encrypt the connection to LDAP using STARTTLS, which will disable connection pooling.
                    type: boolean
                  syncRegistrations:
                    description: |-
                      When true, newly created users will be synced back to LDAP. Defaults to false.
                      When true, newly created users will be synced back to LDAP.
                    type: boolean
                  trustEmail:
                    description: |-
                      If enabled, email provided by this provider is not verified even if verification is enabled for the realm.
                      If enabled, email provided by this provider is not verified even if verification is enabled for the realm.
                    type: boolean
                  usePasswordModifyExtendedOp:
                    description: |-
                      When true, use the LDAPv3 Password Modify Extended Operation (RFC-3062).
                      When `true`, use the LDAPv3 Password Modify Extended Operation (RFC-3062).
                    type: boolean
                  useTruststoreSpi:
                    description: 'Can be one of ALWAYS, ONLY_FOR_LDAPS, or NEVER:'
                    type: string
                  userObjectClasses:
                    description: |-
                      Array of all values of LDAP objectClass attribute for users in LDAP. Must contain at least one.
                      All values of LDAP objectClass attribute for users in LDAP.
                    items:
                      type: string
                    type: array
                  usernameLdapAttribute:
                    description: |-
                      Name of the LDAP attribute to use as the Keycloak username.
                      Name of the LDAP attribute to use as the Keycloak username.
                    type: string
                  usersDn:
                    description: |-
                      Full DN of LDAP tree where your users are.
                      Full DN of LDAP tree where your users are.
                    type: string
                  uuidLdapAttribute:
                    description: |-
                      Name of the LDAP attribute to use as a unique object identifier for objects in LDAP.
                      Name of the LDAP attribute to use as a unique object identifier for objects in LDAP.
                    type: string
                  validatePasswordPolicy:
                    description: |-
                      When true, Keycloak will validate passwords using the realm policy before updating it.
                      When true, Keycloak will validate passwords using the realm policy before updating it.
                    type: boolean
                  vendor:
                    description: |-
                      Can be one of OTHER, EDIRECTORY, AD, RHDS, or TIVOLI. When this is selected in the GUI, it provides reasonable defaults for other fields. When used with the Keycloak API, this attribute does nothing, but is still required. Defaults to OTHER.
                      LDAP vendor. I am almost certain this field does nothing, but the UI indicates that it is required.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.connectionUrl is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.connectionUrl)
                || (has(self.initProvider) && has(self.initProvider.connectionUrl))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.rdnLdapAttribute is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.rdnLdapAttribute)
                || (has(self.initProvider) && has(self.initProvider.rdnLdapAttribute))'
            - message: spec.forProvider.userObjectClasses is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.userObjectClasses)
                || (has(self.initProvider) && has(self.initProvider.userObjectClasses))'
            - message: spec.forProvider.usernameLdapAttribute is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.usernameLdapAttribute)
                || (has(self.initProvider) && has(self.initProvider.usernameLdapAttribute))'
            - message: spec.forProvider.usersDn is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.usersDn)
                || (has(self.initProvider) && has(self.initProvider.usersDn))'
            - message: spec.forProvider.uuidLdapAttribute is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.uuidLdapAttribute)
                || (has(self.initProvider) && has(self.initProvider.uuidLdapAttribute))'
          status:
            description: UserFederationStatus defines the observed state of UserFederation.
            properties:
              atProvider:
                properties:
                  batchSizeForSync:
                    description: |-
                      The number of users to sync within a single transaction. Defaults to 1000.
                      The number of users to sync within a single transaction.
                    type: number
                  bindDn:
                    description: |-
                      DN of LDAP admin, which will be used by Keycloak to access LDAP server. This attribute must be set if bind_credential is set.
                      DN of LDAP admin, which will be used by Keycloak to access LDAP server.
                    type: string
                  cache:
                    description: |-
                      A block containing the cache settings.
                      Settings regarding cache policy for this realm.
                    items:
                      properties:
                        evictionDay:
                          description: |-
                            Day of the week the entry will become invalid on
                            Day of the week the entry will become invalid on.
                          type: number
                        evictionHour:
                          description: |-
                            Hour of day the entry will become invalid on.
                            Hour of day the entry will become invalid on.
                          type: number
                        evictionMinute:
                          description: |-
                            Minute of day the entry will become invalid on.
                            Minute of day the entry will become invalid on.
                          type: number
                        maxLifespan:
                          description: |-
                            Max lifespan of cache entry (duration string).
                            Max lifespan of cache entry (duration string).
                          type: string
                        policy:
                          description: Can be one of DEFAULT, EVICT_DAILY, EVICT_WEEKLY,
                            MAX_LIFESPAN, or NO_CACHE. Defaults to DEFAULT.
                          type: string
                      type: object
                    type: array
                  changedSyncPeriod:
                    description: |-
                      How frequently Keycloak should sync changed LDAP users, in seconds. Omit this property to disable periodic changed users sync.
                      How frequently Keycloak should sync changed LDAP users, in seconds. Omit this property to disable periodic changed users sync.
                    type: number
                  connectionTimeout:
                    description: |-
                      LDAP connection timeout in the format of a Go duration string.
                      LDAP connection timeout (duration string)
                    type: string
                  connectionUrl:
                    description: |-
                      Connection URL to the LDAP server.
                      Connection URL to the LDAP server.
                    type: string
                  customUserSearchFilter:
                    description: |-
                      Additional LDAP filter for filtering searched users. Must begin with ( and end with ).
                      Additional LDAP filter for filtering searched users. Must begin with '(' and end with ')'.
                    type: string
                  deleteDefaultMappers:
                    description: |-
                      When true, the provider will delete the default mappers which are normally created by Keycloak when creating an LDAP user federation provider. Defaults to false.
                      When true, the provider will delete the default mappers which are normally created by Keycloak when creating an LDAP user federation provider.
                    type: boolean
                  editMode:
                    description: |-
                      Can be one of READ_ONLY, WRITABLE, or UNSYNCED. UNSYNCED allows user data to be imported but not synced back to LDAP. Defaults to READ_ONLY.
                      READ_ONLY and WRITABLE are self-explanatory. UNSYNCED allows user data to be imported but not synced back to LDAP.
                    type: string
                  enabled:
                    description: |-
                      When false, this provider will not be used when performing queries for users. Defaults to true.
                      When false, this provider will not be used when performing queries for users.
                    type: boolean
                  fullSyncPeriod:
                    description: |-
                      How frequently Keycloak should sync all LDAP users, in seconds. Omit this property to disable periodic full sync.
                      How frequently Keycloak should sync all LDAP users, in seconds. Omit this property to disable periodic full sync.
                    type: number
                  id:
                    type: string
                  importEnabled:
                    description: |-
                      When true, LDAP users will be imported into the Keycloak database. Defaults to true.
                      When true, LDAP users will be imported into the Keycloak database.
                    type: boolean
                  kerberos:
                    description: |-
                      A block containing the kerberos settings.
                      Settings regarding kerberos authentication for this realm.
                    items:
                      properties:
                        kerberosRealm:
                          description: |-
                            The name of the kerberos realm, e.g. FOO.LOCAL.
                            The name of the kerberos realm, e.g. FOO.LOCAL
                          type: string
                        keyTab:
                          description: |-
                            Path to the kerberos keytab file on the server with credentials of the service principal.
                            Path to the kerberos keytab file on the server with credentials of the service principal.
                          type: string
                        serverPrincipal:
                          description: |-
                            The kerberos server principal, e.g. 'HTTP/host.foo.com@FOO.LOCAL'.
                            The kerberos server principal, e.g. 'HTTP/host.foo.com@FOO.LOCAL'.
                          type: string
                        useKerberosForPasswordAuthentication:
                          description: |-
                            Use kerberos login module instead of ldap service api. Defaults to false.
                            Use kerberos login module instead of ldap service api. Defaults to `false`.
                          type: boolean
                      type: object
                    type: array
                  name:
                    description: |-
                      Display name of the provider when displayed in the console.
                      Display name of the provider when displayed in the console.
                    type: string
                  pagination:
                    description: |-
                      When true, Keycloak assumes the LDAP server supports pagination. Defaults to true.
                      When true, Keycloak assumes the LDAP server supports pagination.
                    type: boolean
                  priority:
                    description: |-
                      Priority of this provider when looking up users. Lower values are first. Defaults to 0.
                      Priority of this provider when looking up users. Lower values are first.
                    type: number
                  rdnLdapAttribute:
                    description: |-
                      Name of the LDAP attribute to use as the relative distinguished name.
                      Name of the LDAP attribute to use as the relative distinguished name.
                    type: string
                  readTimeout:
                    description: |-
                      LDAP read timeout in the format of a Go duration string.
                      LDAP read timeout (duration string)
                    type: string
                  realmId:
                    description: |-
                      The realm that this provider will provide user federation for.
                      The realm this provider will provide user federation for.
                    type: string
                  searchScope:
                    description: |-
                      Can be one of ONE_LEVEL or SUBTREE:
                      ONE_LEVEL: only search for users in the DN specified by user_dn. SUBTREE: search entire LDAP subtree.
                    type: string
                  startTls:
                    description: |-
                      When true, Keycloak will encrypt the connection to LDAP using STARTTLS, which will disable connection pooling.
                      When true, Keycloak will encrypt the connection to LDAP using STARTTLS, which will disable connection pooling.
                    type: boolean
                  syncRegistrations:
                    description: |-
                      When true, newly created users will be synced back to LDAP. Defaults to false.
                      When true, newly created users will be synced back to LDAP.
                    type: boolean
                  trustEmail:
                    description: |-
                      If enabled, email provided by this provider is not verified even if verification is enabled for the realm.
                      If enabled, email provided by this provider is not verified even if verification is enabled for the realm.
                    type: boolean
                  usePasswordModifyExtendedOp:
                    description: |-
                      When true, use the LDAPv3 Password Modify Extended Operation (RFC-3062).
                      When `true`, use the LDAPv3 Password Modify Extended Operation (RFC-3062).
                    type: boolean
                  useTruststoreSpi:
                    description: 'Can be one of ALWAYS, ONLY_FOR_LDAPS, or NEVER:'
                    type: string
                  userObjectClasses:
                    description: |-
                      Array of all values of LDAP objectClass attribute for users in LDAP. Must contain at least one.
                      All values of LDAP objectClass attribute for users in LDAP.
                    items:
                      type: string
                    type: array
                  usernameLdapAttribute:
                    description: |-
                      Name of the LDAP attribute to use as the Keycloak username.
                      Name of the LDAP attribute to use as the Keycloak username.
                    type: string
                  usersDn:
                    description: |-
                      Full DN of LDAP tree where your users are.
                      Full DN of LDAP tree where your users are.
                    type: string
                  uuidLdapAttribute:
                    description: |-
                      Name of the LDAP attribute to use as a unique object identifier for objects in LDAP.
                      Name of the LDAP attribute to use as a unique object identifier for objects in LDAP.
                    type: string
                  validatePasswordPolicy:
                    description: |-
                      When true, Keycloak will validate passwords using the realm policy before updating it.
                      When true, Keycloak will validate passwords using the realm policy before updating it.
                    type: boolean
                  vendor:
                    description: |-
                      Can be one of OTHER, EDIRECTORY, AD, RHDS, or TIVOLI. When this is selected in the GUI, it provides reasonable defaults for other fields. When used with the Keycloak API, this attribute does nothing, but is still required. Defaults to OTHER.
                      LDAP vendor. I am almost certain this field does nothing, but the UI indicates that it is required.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
